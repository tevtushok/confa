{"version":3,"sources":["reportWebVitals.js","stores/userStore.js","stores/appStore.js","services/error.js","services/response.js","services/api.js","services/eventsApi.js","stores/profileStore.js","services/authApi.js","services/codes.js","stores/authStore.js","includes/validators.js","routes/PrivateRoute.js","components/Bayan/index.js","components/LogoutLink/index.js","components/Header/index.js","components/Footer/index.js","pages/Login/index.js","pages/Register/index.js","includes/models.js","includes/modelsHelpers.js","components/ServerError/index.js","components/AppError/index.js","pages/Profile/index.js","components/BaseComponent.js","components/RoomEvents/index.js","components/NoRooms/index.js","services/roomsApi.js","pages/Events/index.js","components/SaveEvent.js","components/EventForm/index.js","components/EventFormSkeleton/index.js","pages/AddEvent/index.js","pages/ChangeEvent/index.js","pages/DeleteEvent/index.js","pages/Page404/index.js","pages/ServerError/index.js","pages/AppError/index.js","pages/Offline/index.js","services/admin/adminApi.js","services/admin/rooms.js","pages/admin/Rooms/index.js","themes/index.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","makeObservable","this","u","user","undefined","isAdmin","observable","action","RENDER_STATES","window","addEventListener","isOnline","token","localStorage","setItem","removeItem","value","renderState","message","errorMessage","navigator","onLine","getItem","ApiDataTypeError","Error","Response","response","init","name","key","parseInt","getNestedPropertyValue","Number","isInteger","getApiCode","getApiMessage","apiData","getApiData","obj","path","chains","split","_hasNestedKey","rest","length","hasOwnProperty","_getNestedPropertyValue","axiosInstance","axios","create","baseURL","process","interceptors","request","use","config","appStore","headers","Authorization","res","hasValidApiResponse","error","Promise","reject","resolve","successHandler","errorHandler","Api","data","post","id","put","delete","get","ymd","rooms","params","date","username","eventsApi","getMyEvents","events","catch","email","password","CODES","AUTH","FAILURE","VALIDATION","EMAIL_EXISTS","LOGIN","EMPTY_CREDENTIALS","INVALID_CREDENTIALS","LOGOUT","VERIFY","UNSIGNED_TOKEN","INVALID_USER","EVENTS","ROOM_NOT_EXISTS","ROOM_NOT_ACTIVE","CROSS_DATES","NOT_EXISTS","NOT_BELONG_TO_YOU","ID_REQUIRED","ID_INVALID","JWT_UNAUTHORIZED","INVALID_TOKEN","ROOMS","INVALID_DATE","values","password_confirm","serviceMessage","errors","validate","RegExp","test","validateName","validateEmail","validatePassword","inProgress","authApi","login","userStore","setUser","setToken","apiCode","finally","register","PrivateRoute","Component","component","render","props","isLoggedIn","to","Bayan","backgroundColor","color","bayanStyle","className","style","React","LogoutLink","inject","logout","unsetToken","Link","href","onClick","doLogout","bind","Header","admin_links","RouterLink","AppBar","position","Toolbar","Footer","version","Login","observer","handleSubmit","e","preventDefault","authStore","history","replace","handleEmailChange","setEmail","target","handlePasswordChange","setPassword","reset","Container","maxWidth","onSubmit","noValidate","FormControl","TextField","label","fullWidth","variant","type","onChange","FormHelperText","Button","disabled","LinkRouter","Register","handleChangeName","setName","handleChangeEmail","handlePasswordConfirmChange","setPasswordConfirm","helperTextName","helperTextEmail","helperTextPasswordConfirmation","helperTextPassword","Model","Object","keys","forEach","Room","room","_id","number","assignProps","User","Event","event","title","description","date_start","date_end","EventHelper","format","dayjs","ServerError","String","push","severity","Alert","map","row","index","AppError","Profile","renderEventList","spacing","profileStore","Grid","item","sm","dateFormatClient","status","routerLink","container","a","loadProfile","PureComponent","INIT","COMMON","COMPONENT_STATE","isLoading","BaseComponent","getServerErrorState","opts","defaults","state","assign","alert","scroll","setState","scrollToMessages","containerId","constructor","element","document","querySelector","scrollIntoView","behavior","STATUSES","EventDetails","selectedTime","renderEventInfo","size","RoomEvents","onDataChange","nextProps","initDinamycProps","timeLine","nowLabel","resetSelections","setTimeLineLeft","onRezise","prevWindowWidth","innerWidth","resizeTimeButtons","getTimeButtonWidth","timeButtonsWidth","timeLineRef","current","offsetWidth","buttonsCount","getVibisleTimeButtonsCount","parseFloat","buttonWidth","querySelectorAll","minWidth","width","toRight","fromTime","timeButtons","buttonsWrapper","prevBtn","nextBtn","currentPos","left","newPos","btnFrom","scrollStep","leftPosLimit","rightPosLimit","setAttribute","removeAttribute","Math","abs","scrollToRight","firstVisibleTimeIndex","scrollToLeft","scrollSwitch","direction","handleScrollMouseDown","button","stopPropagation","mouseDownOnScrollInterval","setInterval","isMouseHoldedOnScroll","handleScrollMouseUp","clearInterval","handleTimeClick","currentTarget","classList","toggle","dataset","setTimeData","changeTime","setIntermediate","btn","timeData","timeIndex1","timeIndex2","add","remove","handleAddEvent","args","filter","time","timeLineData","items","link","join","redirectToAdd","createRef","stepMinutes","prepTimeLine","initTimeData","nowIndex","NaN","nextState","shouldUpdate","isValid","buttons","setFirstVisibleIndex","setTimeout","removeEventListener","some","call","btnIndex","crossedOrPengingEvent","getStatus","selected","clickedBtn","isNaN","round","random","timeToCompare","second","millisecond","dateStart","dateEnd","subtract","TimeLine","ref","data-direction","onMouseDown","onMouseUp","ArrowLeft","buttonProps","ArrowRight","NoRooms","dateString","BASE_RENDER_STATES","NO_ROOMS","UPDATE","Events","memoize","list","filteredField","roomsFilterValue","re","toString","search","applyRoomFilterValue","handleRoomsFilterChange","handleDateChange","selectedDate","loadRoomsWithEventsOfDay","timeLineLabelFormat","prevRoomList","roomEventsRef","datePost","resultState","roomsApi","getRoomsWithEventsOfDay","timeLineLen","now","timeLineDate","hour","minute","ceil","startOfDay","startOf","allItems","i","getTimeLine","breakPoints","xs","md","lg","xl","justify","applyFilter","handleChange","applyDate","loopRooms","toLowerCase","RoomFilter","clearTimeout","timeout","inputProps","InputLabelProps","shrink","EventsDatePicker","utils","DateUtils","KeyboardButtonProps","SAVED","SaveEvent","handleDateStartChange","datetime","validateDateStart","handleDateEndChange","validateDateEnd","handleRoomChange","handleTitleChange","validateTitle","handleDescriptionChange","Date","valid","getTime","dateFormat","setRoomState","result","Array","isArray","stateProps","roomsList","getEvent","DETAILS_ID_REQUIRED","DETAILS_ID_INVALID","EventForm","submitBtnText","Select","MenuItem","DateTimePicker","ampm","minutesStep","multiline","crossedEvents","EventFormSkeleton","Skeleton","height","EventCreated","AddEvent","withRouter","createdEvent","initEventState","defaultStartFrom","setMinutes","getMinutes","defaultEvent","match","roomId","getEventFromUrl","dateFrom","from","dateTo","loadRoomList","newStateOpts","postData","getPostData","addEvent","errorFields","getErrorFields","getValidationErrorState","dbEvents","ChangeEvent","changed","changeEvent","eventId","eventModel","roomState","loadEventDetails","eventState","changedEvent","componentStatus","handleStartDateTimeChange","DeleteComfirm","handleDeleteEvent","EventDeleted","DeleteEvent","deleteEvent","newProps","Page404","location","pathname","reload","reloadWindow","Offline","getRooms","api","saveRooms","deleteRoom","validateInputFields","fields","fieldNames","field","validateRoomTitle","validateRoomNumber","adminRooms","addRoomHandler","removeRoomHandler","toggleStatusHandler","loadRooms","inputTimeoutx","inputSavingDelay","required","text","roomList","page","isLoaded","isNew","msg","scrollTop","getRoomsApi","setErrorMessage","find","createNewRoom","updateRoom","fieldName","includes","getNewRoomSceleton","needleRoom","roomsFiltered","err","deleteRoomApi","deleteRes","code","requiredFields","getRequiredFields","validationRes","saveRoomsApi","newId","respErrorFields","respErrorFieldNames","CircularProgress","IconButton","edge","aria-label","Refresh","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","fullwidth","updateRoomHandler","defaultValue","align","Delete","textColor","contrastText","paletteType","theme","createMuiTheme","palette","background","default","primary","main","secondary","colors","green","red","overrides","MuiTypography","colorPrimary","MuiCssBaseline","html","fontFamily","WebkitFontSmoothing","fontSize","App","setRenderState","verify","loggedIn","exact","ThemeProvider","CssBaseline","stores","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.635ecb0d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { makeObservable, observable, action } from 'mobx';\n\nclass UserStore {\n    constructor() {\n        makeObservable(this);\n    }\n\n    @observable user = undefined;\n\t@action setUser(u) {\n\t\tthis.user = u;\n\t}\n    @action unsetUser() {\n        this.user = undefined;\n    }\n\n\tget isLoggedIn() {\n\t\treturn !!this.user;\n\t}\n\n    get user() {\n        return this.user;\n    }\n\n\tget isAdmin() {\n        return this.user?.isAdmin;\n\t}\n\n}\n\nexport default new UserStore();\n","import { makeObservable, observable, action } from 'mobx';\n\nexport const RENDER_STATES = {\n    'LOADER': 'LOADER',\n    'OFFLINE': 'OFFLINE',\n    'ERROR': 'ERROR',\n    'COMMON': 'COMMON',\n};\n\n\nclass AppStore {\n    constructor() {\n        window.addEventListener('online', () => {\n            console.log('this.isOnline: true');\n            this.isOnline = true;\n        });\n        window.addEventListener('offline', () => {\n            console.log('this.isOnline: false');\n            this.isOnline = false;\n        });\n        makeObservable(this);\n    }\n    @observable isOnline = window.navigator.onLine\n\n    @observable token = window.localStorage.getItem('token');\n    @action setToken(token) {\n        this.token = token;\n        window.localStorage.setItem('token', token);\n    }\n\n    @action unsetToken() {\n        this.token = undefined;\n        window.localStorage.removeItem('token');\n    }\n\n    @observable renderState = RENDER_STATES.LOADER;\n    @action setRenderState(value) {\n        this.renderState = value;\n    }\n\n    @observable errorMessage = '';\n    @action setErrorMessage(message) {\n        this.errorMessage= message;\n    }\n    getErrorMessage() {\n        return this.errorMessage;\n    }\n}\n\nexport default new AppStore();\n","export default class ApiDataTypeError extends Error {}\n","export default class Response {\n    constructor(response) {\n        this.init(response);\n        this.name = 'my own response';\n    }\n\n    init(response) {\n        for(let key in response) {\n            this[key] = response[key];\n        }\n    }\n\n    getApiCode() {\n        return parseInt(this.getNestedPropertyValue(this, 'data.code'));\n    }\n\n    getApiMessage() {\n        return this.getNestedPropertyValue(this, 'data.message');\n    }\n\n    getApiData() {\n        return this.getNestedPropertyValue(this, 'data.data');\n    }\n\n    hasValidApiResponse() {\n        return (Number.isInteger(this.getApiCode())\n            && this.getApiMessage() !== null) ? true : false;\n    }\n\n    getErrorFields() {\n        const apiData = this.getApiData();\n        return apiData ? apiData['errors'] : {};\n    }\n\n    /*\n     * @obj Object\n     * @path string key path separated by dott\n     * @return Boolean\n     */\n    hasNestedProperty(obj, path) {\n        function _hasNestedKey(obj, key, ...rest) {\n            if ('undefined' === typeof obj) return false;\n            if (!rest.length) return obj.hasOwnProperty(key);\n            return _hasNestedKey(obj[key], ...rest);\n        }\n        const chains = path.split('.');\n        return _hasNestedKey(obj, ...chains);\n    }\n\n    /*\n     * @obj Object\n     * @path string key path separated by dott\n     * @return mixed (property value | null)\n     */\n    getNestedPropertyValue(obj, path) {\n        function _getNestedPropertyValue(obj, key, ...rest) {\n            if ('undefined' === typeof obj) return null;\n            if (!rest.length){\n                return obj.hasOwnProperty(key) ? obj[key] : null;\n            }\n            return _getNestedPropertyValue(obj[key], ...rest);\n        }\n        const chains = path.split('.');\n        return _getNestedPropertyValue(obj, ...chains);\n    }\n}\n","import axios from \"axios\";\nimport ApiDataTypeError from './error';\nimport Response from './response';\n\nimport appStore from '../stores/appStore';\n\n\nconst axiosInstance = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n});\n\naxiosInstance.interceptors.request.use(function (config) {\n    const token = appStore.token;\n    config.headers = { Authorization: `Bearer ${token}` }\n    return config;\n});\n\naxiosInstance.interceptors.response.use(\n    response => successHandler(response),\n    error => errorHandler(error)\n);\n\n\nfunction successHandler(res) {\n    const response = new Response(res);\n    if (!response.hasValidApiResponse()) {\n        const error = ApiDataTypeError('Invalid response from server');\n        return Promise.reject({ error: error, response: response, });\n    }\n    return Promise.resolve({ error: false, response: response });\n}\n\nfunction errorHandler(error) {\n    const response = new Response(error.response);\n    return Promise.reject( { error: error, response: response, });\n}\n\nclass Api {\n    constructor() {\n        this.axios = axiosInstance;\n    }\n}\n\nexport default Api;\n","import Api from './api';\n\nclass EventsApi extends Api{\n    addEvent(data) {\n        return this.axios.post('/events/event/', data);\n    }\n\n    changeEvent(id, data) {\n        return this.axios.put('/events/event/' + id, data);\n    }\n\n    deleteEvent(id) {\n        return this.axios.delete('/events/event/' + id);\n    }\n\n    getEvent(id) {\n        return this.axios.get('/events/event/' + id);\n    }\n\n    list(ymd, rooms = null) {\n        let params = { date: ymd, rooms: rooms}\n\t\treturn this.axios.get('/events/list', { params: params })\n    }\n\n    getMyEvents() {\n\t\treturn this.axios.get('/events/myEvents');\n    }\n}\n\nexport default new EventsApi();\n","import { makeObservable, observable, action } from 'mobx';\nimport eventsApi from '../services/eventsApi';\n\nexport const RENDER_STATES = {\n    INIT: 'INIT',\n    COMMON: 'COMMON',\n    FAILURE: 'FAILURE',\n};\n\nclass ProfileStore {\n    constructor() {\n        makeObservable(this);\n    }\n\n    @observable renderState = RENDER_STATES.INIT;\n    @observable events = [];\n\n    @action loadProfile(username) {\n        this.renderState = RENDER_STATES.INIT;\n        eventsApi.getMyEvents()\n            .then(action(({ response }) => {\n                const apiData = response.getApiData();\n                this.renderState = RENDER_STATES.COMMON;\n                this.events = apiData.events;\n            }))\n            .catch(action(( {error, response }) => {\n                this.events = [];\n                this.renderState = RENDER_STATES.FAILURE;\n            }));\n    }\n}\n\nexport default new ProfileStore();\n","import Api from './api';\n\nclass AuthApi extends Api {\n    verify() {\n        return this.axios.get('/auth/verify');\n    }\n\n    login(email, password) {\n        return this.axios.post('/auth/login', {email: email, password: password});\n    }\n\n    logout() {\n        return this.axios.post('/auth/logout');\n    }\n\n    register(user) {\n        return this.axios.post('/auth/register', user);\n    }\n}\n\nexport default new AuthApi();\n","// API CODES\nconst CODES = {\n    AUTH: {\n        FAILURE: 1000,\n        VALIDATION: 1001,\n        EMAIL_EXISTS: 1002,\n        LOGIN: 1003,\n        EMPTY_CREDENTIALS: 1004,\n        INVALID_CREDENTIALS: 1005,\n        LOGOUT: 1006,\n        VERIFY: 1007,\n        UNSIGNED_TOKEN: 1007,\n        INVALID_USER: 1008,\n    },\n    EVENTS: {\n        FAILURE: 1100,\n        VALIDATION: 1101,\n        ROOM_NOT_EXISTS: 1102,\n        ROOM_NOT_ACTIVE: 1103,\n        CROSS_DATES: 1104,\n        NOT_EXISTS: 1105,\n        NOT_BELONG_TO_YOU: 1106,\n        ID_REQUIRED: 1107,\n        ID_INVALID: 1108,\n    },\n    LOGIN: {\n        EMPTY_CREDENTIALS: 1200,\n        INVALID_CREDENTIALS: 1201,\n        JWT_UNAUTHORIZED: 1202,\n        UNSIGNED_TOKEN: 1203,\n        INVALID_TOKEN: 1204,\n        EMAIL_EXISTS: 1205,\n    },\n    ROOMS: {\n        FAILURE: 1300,\n        INVALID_DATE: 1301,\n    }\n}\nexport default CODES;\n","import { makeObservable, observable, action } from 'mobx';\nimport appStore from './appStore';\nimport userStore from './userStore';\nimport authApi from '../services/authApi';\nimport CODES from '../services/codes'\nimport { validateEmail, validateName, validatePassword } from '../includes/validators';\n\n\nexport const RENDER_STATES = {\n    COMMON: 'COMMON',\n    FAILURE: 'FAILURE',\n};\n\nclass authStore{\n    constructor() {\n        makeObservable(this);\n    }\n\n    @observable values = {\n        email: '',\n        password: '',\n        name: '',\n        password_confirm: '',\n    }\n\n    @action reset() {\n        this.values.name = '';\n        this.values.email = '';\n        this.values.password = '';\n        this.values.password_confirm = '';\n        this.serviceMessage = '';\n        this.errors = {}\n    }\n\n    @action setName(name) {\n        this.values.name = name;\n        const validate = validateName(name);\n        console.log('name', validate);\n        true === validate ? delete this.errors.name: this.errors.name = validate;\n    }\n\n    @action setEmail(email) {\n        this.values.email = email;\n        const validate = validateEmail(email);\n        true === validate ? delete this.errors.email : this.errors.email = validate;\n    }\n\n    @action setPassword(password) {\n        this.values.password = password;\n        const validate = validatePassword(password);\n        true === validate ? delete this.errors.password: this.errors.password = validate;\n    }\n\n    @action setPasswordConfirm(password_confirm) {\n        this.values.password_confirm = password_confirm;\n        console.log(this.values.password, this.values.password_confirm);\n        const validate = this.values.password === this.values.password_confirm;\n        true === validate ?  delete this.errors.password_confirm\n            : this.errors.password_confirm = { message: 'Passwords dismatched' };\n    }\n\n    @observable renderState = RENDER_STATES.COMMON;\n    @observable errors = {};\n    @observable serviceMessage = '';\n    @observable inProgress = false;\n\n    @action login() {\n        this.inProgress = true;\n        this.serviceMessage = '';\n        return authApi.login(this.values.email, this.values.password)\n            .then(action(({ response }) => {\n                const apiData = response.getApiData();\n                userStore.setUser(apiData.user);\n                appStore.setToken(apiData.user.token);\n            }))\n            .catch(action(({ error, response }) => {\n                const apiMessage = response.getApiMessage();\n                const apiCode = response.getApiCode();\n                this.renderState = RENDER_STATES.FAILURE;\n                switch(apiCode) {\n                    case CODES.AUTH.INVALID_CREDENTIALS:\n                    case CODES.AUTH.EMPTY_CREDENTIALS:\n                        this.serviceMessage = 'Invalid credentials';\n                        break;\n                    default:\n                        console.log('authStore login default case', apiMessage);\n                        this.serviceMessage = 'Server error';\n                }\n                throw new Error('Server error');\n            }))\n            .finally(action(() => {\n                this.inProgress = false;\n            }));\n    }\n\n    @action register() {\n        this.inProgress = false;\n        const data = {\n            name: this.values.name,\n            email: this.values.email,\n            password: this.values.password,\n        }\n        return authApi.register(data)\n            .then(action(({ response }) => {\n                const apiData = response.getApiData();\n                userStore.setUser(apiData.user);\n                appStore.setToken(apiData.user.token);\n            }))\n            .catch(action(({ error, response }) => {\n                const apiMessage = response.getApiMessage();\n                const apiCode = response.getApiCode();\n                const apiData = response.getApiData();\n                console.log('register catch', apiCode, apiMessage);\n                switch(apiCode) {\n                    case CODES.AUTH.VALIDATION:\n                        this.errors = apiData.errors;\n                        break;\n                    case CODES.AUTH.EMAIL_EXISTS:\n                        this.errors = {email: { message: 'Email exists' }};\n                        break;\n                    default:\n                        this.serviceMessage = 'Server error';\n                }\n                throw error;\n            }))\n            .finally(action(() => {\n                this.inProgress = false;\n            }));\n    }\n}\nexport default new authStore();\n","export const validateEmail = (email = '') => {\n    const emailRegExp = RegExp( /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n    const isValid = emailRegExp.test(email);\n    return isValid ? true : { message: 'Invalid Email' };\n}\n\nexport const validatePassword = (password = '') => {\n    const passwordRegexp = /^.*(?=.{8,})(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!#$%&? \"]).*$/;\n    const isValid = passwordRegexp.test(password);\n    return isValid ? true: { message: 'must contain 8 characters and at least one number, one letter and one unique character such as !#$%&?' };\n}\n\nexport const validateName = (name) => {\n    const nameRegexp = RegExp(/^[a-z]\\w{2,30}$/i);\n    const isValid = nameRegexp.test(name);\n    return isValid ? true : { message: 'Name should starts with letter, and contain minimum 3 character' };\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /login page\n\n        <Route {...rest} render={props => (\n            rest.isLoggedIn ?\n                <Component {...props} />\n            : <Redirect to=\"/login\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport './index.scss'\n\nclass Bayan extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.backgroundColor = this.props.backgroundColor || 'inherit';\n\t\tthis.color = this.props.color || 'inherit';\n\t}\n\trender() {\n\t\tconst bayanStyle = {\n\t\t\tbackgroundColor: this.backgroundColor,\n\t\t\tcolor: this.color,\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"bayan\" style={bayanStyle}>\n\t\t\t\t<div>&middot;</div>\n\t\t\t\t<div>&middot;</div>\n\t\t\t\t<div>&middot;</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Bayan;\n","import React from 'react';\nimport authApi from '../../services/authApi'\nimport { inject } from 'mobx-react';\nimport Link from '@material-ui/core/Link';\n\n@inject('appStore')\n@inject('userStore')\nclass LogoutLink extends React.Component {\n\tdoLogout() {\n        authApi.logout().finally(() => {\n            this.props.userStore.setUser(undefined);\n            this.props.appStore.unsetToken();\n        });\n\t}\n\trender() {\n        console.log('LogoutLink render', this.props.userStore.isLoggedIn);\n        if (this.props.userStore.isLoggedIn) {\n            return (\n                <Link href=\"#\" onClick={this.doLogout.bind(this)}>Logout</Link>\n            );\n        }\n        return '';\n\t}\n}\n\nexport default LogoutLink;\n","import React from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { inject } from 'mobx-react';\nimport LogoutLink from '../LogoutLink'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Link from \"@material-ui/core/Link\";\n\nimport './index.scss';\n\n\n\n@inject(\"userStore\")\nclass Header extends React.Component {\n\trender() {\n\t\tconst userStore = this.props.userStore;\n\t\tif (userStore.user) {\n\t\t\tlet admin_links = '';\n\t\t\tif (userStore.isAdmin) {\n\t\t\t\tadmin_links = <Link component={RouterLink} to=\"/rooms\">Rooms</Link>\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<AppBar position=\"static\" color=\"primary\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<LogoutLink/>\n\t\t\t\t\t\t{admin_links}\n\t\t\t\t\t\t<Link component={RouterLink} to=\"/events\">Events</Link>\n\t\t\t\t\t\t<Link component={RouterLink} to={`/@${userStore.user.name}`}>Profile</Link>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Link component={RouterLink} to=\"/login\">Login</Link>\n\t\t\t\t\t\t<Link component={RouterLink} to=\"/register\">Register</Link>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Header;\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Link from \"@material-ui/core/Link\";\n\nimport './index.scss';\n\nclass Footer extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<footer>\n\t\t\t\t<Toolbar className=\"footer\">\n\t\t\t\t\t<div>\n                        Based on <Link href=\"https://reactjs.org\">React</Link>{React.version}\n                    </div>\n\t\t\t\t</Toolbar>\n\t\t\t</footer>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link as LinkRouter } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport Bayan from '../../components/Bayan';\nimport { Container, FormControl, TextField, Button, Link, FormHelperText } from '@material-ui/core'\n\nimport './index.scss';\n\n\n@inject('authStore')\n@observer\nclass Login extends React.Component {\n    componentWillUnmount() {\n        this.props.authStore.reset();\n    }\n\n\thandleSubmit = e => {\n        e.preventDefault();\n        this.props.authStore.login().then(() => this.props.history.replace(\"/\")).catch((e) => {\n            console.log(e);\n        });\n\t};\n\n\thandleEmailChange = e => {\n        console.log(e.target.value);\n        this.props.authStore.setEmail(e.target.value);\n\t}\n\n\thandlePasswordChange = e => {\n        this.props.authStore.setPassword(e.target.value);\n\t}\n\n\trender() {\n        console.log('Login page render');\n\t\tconst errors = this.props.authStore.errors;\n\t\tconst serviceMessage = this.props.authStore.serviceMessage;\n\t\treturn (\n\t\t\t<Container maxWidth=\"sm\">\n\t\t\t\t<div className=\"login page\">\n\t\t\t\t\t<h2 className=\"text-center\">Login page</h2>\n\t\t\t\t\t<form onSubmit={this.handleSubmit} noValidate>\n\t\t\t\t\t\t<FormControl className=\"login__form-control\">\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email:\"\n\t\t\t\t\t\t\t\tvalue={this.props.authStore.values.email}\n\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tonChange={this.handleEmailChange}\n\t\t\t\t\t\t\t\terror={!!errors?.email} />\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<FormControl className=\"login__form-control\">\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password:\"\n\t\t\t\t\t\t\t\tvalue={this.props.authStore.values.password}\n\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tonChange={this.handlePasswordChange}\n\t\t\t\t\t\t\t\terror={!!errors?.password} />\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<FormControl error={!!serviceMessage.length} className=\"login__serviceContainer\">\n\t\t\t\t\t\t\t{this.props.authStore.inProgress && <Bayan/>}\n\t\t\t\t\t\t\t<FormHelperText>{serviceMessage}</FormHelperText>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" fullWidth type=\"submit\"\n                                disabled={this.props.authStore.inProgress}>Login\n                            </Button>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<p className=\"login__invite\">\n\t\t\t\t\t\t\t<Link color=\"primary\" component={LinkRouter} to=\"/register\">\n\t\t\t\t\t\t\t\tDon't have account? click register\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t);\n\t}\n\n}\n\nexport default Login;\n","import React from 'react'\nimport Bayan from '../../components/Bayan'\nimport { Button, Container, FormControl, TextField, FormHelperText, } from '@material-ui/core'\nimport { observer, inject } from 'mobx-react';\n\nimport './index.scss';\n\n@inject('authStore')\n@observer\nclass Register extends React.Component {\n    componentWillUnmount() {\n        this.props.authStore.reset();\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.authStore.register()\n            .then(() => {\n                this.props.history.replace('/');\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    handleChangeName = e => {\n        this.props.authStore.setName(e.target.value);\n    }\n\n    handleChangeEmail = e => {\n        this.props.authStore.setEmail(e.target.value);\n    }\n\n    handlePasswordChange = e => {\n        this.props.authStore.setPassword(e.target.value);\n    }\n\n    handlePasswordConfirmChange = e => {\n        this.props.authStore.setPasswordConfirm(e.target.value);\n    }\n\n    render() {\n        const errors = this.props.authStore.errors;\n        console.log('errors', errors.email);\n        const helperTextName = errors?.name?.message || 'Name should starts with letter, and contain minimum 3 character';\n        const helperTextEmail = errors?.email?.message || 'Email is invalid';\n        const helperTextPasswordConfirmation = errors?.password_confirm?.message || 'Invalid password confirmation';\n        const helperTextPassword = errors?.password?.message || 'Password must contain 8 characters and at least one number, one letter and one special character';\n        const serviceMessage = this.props.authStore.serviceMessage;\n        return (\n            <Container maxWidth=\"sm\">\n                <div className=\"register page\">\n                    <h2 className=\"text-center\">Register new user</h2>\n\n                    <form onSubmit={this.handleSubmit}>\n                        <FormControl error={!!errors.name}>\n                            <TextField\n                                name=\"name\"\n                                onChange={this.handleChangeName}\n                                id=\"name\"\n                                label=\"Name:\"\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                            {!!errors.name && <FormHelperText className=\"errorHelper\">{helperTextName}</FormHelperText> }\n                        </FormControl>\n\n                        <FormControl error={!!errors.email}>\n                            <TextField\n                                onChange={this.handleChangeEmail}\n                                name=\"email\"\n                                fullWidth\n                                label=\"Email:\"\n                                variant=\"outlined\"\n                            />\n                            {!!errors.email && <FormHelperText className=\"errorHelper\">{helperTextEmail}</FormHelperText> }\n                        </FormControl>\n\n                        <FormControl error={!!errors.password}>\n                            <TextField\n                                onChange={this.handlePasswordChange}\n                                name=\"password\"\n                                fullWidth\n                                label=\"Password:\"\n                                variant=\"outlined\"\n                                type=\"password\"\n                            />\n                            {!!errors.password && <FormHelperText id=\"password-error\">{helperTextPassword}</FormHelperText>}\n                        </FormControl>\n\n                        <FormControl error={!!errors.password_confirm}>\n                            <TextField\n                                onChange={this.handlePasswordConfirmChange}\n                                name=\"password_confirm\"\n                                fullWidth\n                                label=\"Password confirm:\"\n                                variant=\"outlined\"\n                                type=\"password\"\n                            />\n                            {!!errors.password_confirm && <FormHelperText>{helperTextPasswordConfirmation}</FormHelperText>}\n                        </FormControl>\n\n                        <FormControl error={!!serviceMessage.length} className=\"serviceMessage\">\n                            {this.props.authStore.inProgress && <Bayan/>}\n                            <FormHelperText>{serviceMessage}</FormHelperText>\n                        </FormControl>\n\n                        <FormControl>\n                            <Button variant=\"contained\" color=\"secondary\"  fullWidth type=\"submit\"\n                                disabled={this.props.authStore.inProgress}>Register\n                            </Button>\n                        </FormControl>\n\n                    </form>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default Register;\n","class Model {\n    assignProps(props) {\n        Object.keys(props).forEach(key => {\n            this[key] = props[key];\n        });\n    }\n}\n\nexport class Room extends Model {\n    constructor(room = {}) {\n        super();\n        this._id = '';\n        this.number = '';\n        this.assignProps(room);\n    }\n}\n\nexport class User extends Model {\n    constructor(user = {}) {\n        super();\n        this._id = '';\n        this.name = '';\n        this.email = '';\n        this.assignProps(user);\n    }\n}\n\nexport class Event extends Model {\n    constructor(event = {}) {\n        super();\n        this._id =  '';\n        this.room = new Room();\n        this.user = new User();\n        this.title = '';\n        this.description = '';\n        this.date_start = '';\n        this.date_end = '';\n\n        this.assignProps(event);\n    }\n}\n\n","import { Event } from './models';\nimport dayjs from 'dayjs';\n\n\nexport class EventHelper extends Event {\n\n    static dateFormat(date, format = '') {\n        return dayjs(date).format(format);\n    }\n\n    /*\n     * Description.\n     * Format date to client side pages\n     */\n    static dateFormatClient(date, format = 'ddd DD YYYY HH:mm') {\n        return dayjs(date).format(format);\n    }\n}\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert'\n\nexport default class ServerError extends React.Component {\n    constructor(props) {\n        super(props);\n        this.data = []\n        if (typeof this.props.data === 'string' || this.props.data instanceof String) {\n            this.data.push(this.props.data);\n        }\n        else {\n            this.data = this.props.data;\n        }\n        this.severity = this.props.severity || 'error';\n    }\n    render() {\n        return (\n            <Alert className=\"ServerError\" severity={this.severity}>\n                {this.data.map((row, index) => (\n                    <div key={index}>{row}</div>\n                ))}\n            </Alert>\n        );\n    }\n}\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert'\n\nexport default class AppError extends React.Component {\n    constructor(props) {\n        super(props);\n        this.data = []\n        if (typeof this.props.data === 'string' || this.props.data instanceof String) {\n            this.data.push(this.props.data);\n        }\n        else {\n            this.data = this.props.data;\n        }\n        this.severity = this.props.severity || 'error';\n    }\n    render() {\n        return (\n            <Alert className=\"appError\" severity={this.severity}>\n                {this.data.map((row, index) => (\n                    <div key={index}>{row}</div>\n                ))}\n            </Alert>\n        );\n    }\n}\n","import React from 'react';\nimport { Link as routerLink } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport {\n    Grid,\n    Container,\n    Link,\n} from '@material-ui/core'\nimport { EventHelper } from '../../includes/modelsHelpers';\nimport ServerError from '../../components/ServerError';\nimport AppError from '../../components/AppError';\nimport Bayan from '../../components/Bayan';\nimport { RENDER_STATES } from '../../stores/profileStore';\n\nimport './index.scss';\n\n\n@inject('profileStore')\n@observer\nclass Profile extends React.PureComponent {\n    async componentDidMount() {\n        this.props.profileStore.loadProfile();\n    }\n    renderEventList = () => {\n        let spacing = 4;\n        let events = '';\n        if (!this.props.profileStore.events.length) {\n            events = <p>You dont have any events</p>;\n            spacing = 0;\n        }\n        else {\n            events = (\n                this.props.profileStore.events.map((event, index) => (\n                    <Grid key={event._id} item sm={4} className=\"event\">\n                        <div>Room: {event.room.number}</div>\n                        <div>Title: {event.title}</div>\n                        <div>Date start: {EventHelper.dateFormatClient(event.date_start)}</div>\n                        <div>Date start: {EventHelper.dateFormatClient(event.date_end)}</div>\n                        <div>\n                            <div>Status: {event.status}</div>\n                            <Link component={routerLink} variant=\"inherit\" to={`/events/change/${event._id}`}>change</Link>&nbsp;|&nbsp;\n                            <Link component={routerLink} variant=\"inherit\" to={`/events/delete/${event._id}`}>delete</Link>\n                        </div>\n                    </Grid>\n                ))\n            );\n        }\n        return (\n            <div className=\"events\">\n                <h3>Events</h3>\n                <Grid container className=\"eventsList\" spacing={spacing}>\n                    {events}\n                </Grid>\n            </div>\n        );\n    }\n    render() {\n        console.info('render profile page', this.props.profileStore.renderState)\n        let component = null;\n        switch(this.props.profileStore.renderState) {\n            case RENDER_STATES.INIT:\n                component = <Bayan/>;\n                    break;\n            case RENDER_STATES.COMMON:\n                component = this.renderEventList();\n                break;\n            case RENDER_STATES.FAILURE:\n                component = <ServerError data=\"Server error\"/>;\n                break;\n            default:\n                component = <AppError data=\"Application error\"/>;\n        }\n        return (\n            <Container maxWidth=\"md\" className={`profile page ${this.props.profileStore.renderState}`}>\n                {component}\n            </Container>\n        );\n    }\n\n}\n\nexport default Profile;\n","import React from 'react';\n\nexport const RENDER_STATES = {\n    INIT: 'INIT',\n    FAILURE: 'FAILURE',\n    COMMON: 'COMMON',\n};\n\nexport const COMPONENT_STATE = {\n    renderState: RENDER_STATES.INIT,\n    serviceMessage: null,\n    errors: {},\n    isLoading: false,\n};\n\nexport default class BaseComponent extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = COMPONENT_STATE;\n\t}\n\tscrollToMessages() {\n\t\tconst className = this.constructor.name;\n\t\tconst containerId = className + 'Messages';\n\t\tconst element = document.querySelector('#' + containerId);\n\t\tif (element) {\n\t\t\telement.scrollIntoView({behavior: \"smooth\"});\n\t\t}\n\t}\n\n    getServerErrorState = (message, opts = {}) => {\n        const defaults = {\n            serviceMessage: message,\n            renderState: RENDER_STATES.FAILURE,\n        };\n        const state = Object.assign(defaults, opts);\n        return state;\n    };\n\n    getPermissionErrorState(message, opts = {}) {\n        const defaults = {\n            serviceMessage: message,\n            renderState: RENDER_STATES.FAILURE,\n        };\n        const state = Object.assign(defaults, opts);\n        return state;\n    }\n\n    getValidationErrorState(message, errors = {}, opts = {}) {\n        const defaults = {\n            serviceMessage: message,\n            errors: errors,\n        };\n        const state = Object.assign(defaults, opts);\n        return state;\n    }\n\n\talert = (obj, scroll = true) => {\n\t\tthis.setState(obj);\n\t\tif (scroll) {\n\t\t\tthis.scrollToMessages();\n\t\t}\n\t};\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom';\n\nimport { inject } from 'mobx-react';\nimport dayjs from 'dayjs';\n\nimport { Button, } from '@material-ui/core';\nimport {\n    ArrowLeft as ArrowLeftIcon,\n    ArrowRight as ArrowRightIcon,\n} from \"@material-ui/icons\";\n\nimport { EventHelper } from '../../includes/modelsHelpers';\n\nimport './index.scss';\n\n\nconst STATUSES = {\n    AVAILABLE: 'available',\n    RESERVED: 'reserved',\n    PENDING: 'pending',\n};\n\n@inject('userStore')\nclass RoomEvents extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.timeLineRef = React.createRef();\n\n        this.stepMinutes = this.props.stepMinutes;\n\n        this.initDinamycProps(this.props);\n\n        this.state = {\n            redirectToAdd: null,\n            selectedTime: this.timeLine[this.nowLabel],\n        };\n        this.mouseDownOnScrollInterval = false;\n        this.isMouseHoldedOnScroll = false;\n        this.prevWindowWidth = null;\n    }\n\n    initDinamycProps(props) {\n        this.date = props.date;\n        this.room = props.room;\n\n        this.timeLineData = props.timeLine;\n        this.nowLabel = this.timeLineData.nowLabel;\n        this.timeLine = this.prepTimeLine(this.room.events);\n\n        this.initTimeData();\n    }\n\n    setFirstVisibleIndex(index = false) {\n        console.log('index:', index);\n        if (!index) {\n            index = this.timeLineData.nowIndex;\n            console.log(' 1 index:', index);\n        }\n        if (index < 0) {\n            index = 0;\n            console.log(' 2 index:', index);\n        }\n        const buttonsCount = this.getVibisleTimeButtonsCount();\n        if (index > this.timeLineData.items.length - buttonsCount) {\n            index = this.timeLineData.items.length - buttonsCount;\n            console.log(' 3 index:', index);\n        }\n        console.log('nowIndex:', this.timeLineData.nowIndex,\n            'buttonsCount', buttonsCount);\n        this.firstVisibleTimeIndex = index;\n    }\n\n    initTimeData() {\n        this.timeData = {\n            timeIndex1: NaN,\n            timeIndex2: NaN,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.room.events.length !== nextProps.room.events.length) {\n            let ids = this.props.room.events.map(event => event._id).join(',');\n            let newIds = nextProps.room.events.map(event => event._id).join(',');\n            const shouldUpdate = (ids !== newIds);\n            if (shouldUpdate) {\n                this.onDataChange(nextProps);\n            }\n            return shouldUpdate;\n        }\n\n        if (dayjs(nextProps.date).isValid() && this.props.date !== nextProps.date) {\n            this.onDataChange(nextProps);\n            return true;\n        }\n\n        if (this.state.selectedTime.label !== nextState.selectedTime.label) {\n            return true;\n        }\n\n        return true;\n    }\n\n    onDataChange = (nextProps) => {\n        this.initDinamycProps(nextProps);\n        this.setState({ selectedTime: this.timeLine[this.nowLabel] });\n        this.resetSelections();// reset current selections\n        this.setTimeLineLeft();\n    }\n\n    resetSelections() {\n        this.setIntermediate();\n        const buttons = this.timeLineRef.current.querySelectorAll('.selected, .postData');\n        if (buttons) {\n            buttons.forEach(button => {\n                button.classList.remove('selected');\n                button.classList.remove('postData');\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.setFirstVisibleIndex();\n        this.resizeTimeButtons();\n        this.setTimeLineLeft();\n\n        const timeButtons = this.timeLineRef.current.querySelector('.buttonsWrapper');\n        setTimeout(() => {\n            timeButtons.classList.remove('loading');\n        },0);\n        this.prevWindowWidth = window.innerWidth;\n        window.addEventListener('resize', this.onRezise);\n    }\n\n    onRezise = () => {\n        if (this.prevWindowWidth !== window.innerWidth) {\n            this.resizeTimeButtons();\n            this.setTimeLineLeft();\n            this.prevWindowWidth = window.innerWidth;\n        }\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onRezise);\n    }\n\n    getVibisleTimeButtonsCount() {\n        const timeButtonsWidth = this.timeLineRef.current.querySelector('.buttonsWrapper').offsetWidth;\n        const count = 1 + parseInt(timeButtonsWidth / 100);\n        return count;\n    }\n\n    getTimeButtonWidth = () => {\n        const timeButtonsWidth = this.timeLineRef.current.querySelector('.buttonsWrapper').offsetWidth;\n        const buttonsCount = this.getVibisleTimeButtonsCount();\n        let width = parseFloat(timeButtonsWidth / buttonsCount);\n        return width;\n    };\n\n    setTimeLineLeft() {\n        const timeButtons = this.timeLineRef.current.querySelector('.timeButtons');\n        const timeButtonsWidth = this.timeLineRef.current.querySelector('.buttonsWrapper').offsetWidth;\n        let left = 0;\n        let rightPosLimit = timeButtons.offsetWidth - timeButtonsWidth;\n        const buttonsCount = this.getVibisleTimeButtonsCount();\n        console.log('buttonsCount', buttonsCount, 'firstVisibleTimeIndex', this.firstVisibleTimeIndex);\n        // if last button is visible stick to right\n        if (buttonsCount >= this.timeLineData.items.length - this.firstVisibleTimeIndex) {\n            left = rightPosLimit;\n            this.firstVisibleTimeIndex = this.timeLineData.items.length - buttonsCount;\n            const firstVisibleButton = this.timeLineRef.current.querySelector(`.timebtn[data-index=\"${this.firstVisibleTimeIndex}\"]`);\n            firstVisibleButton.style.color = 'yellow';\n            const nextBtn = this.timeLineRef.current.querySelector('.next');\n            nextBtn.setAttribute('disabled', true);\n            console.log('disable last');\n        }\n        else if (this.firstVisibleTimeIndex > 0) {\n            let buttons = this.timeLineRef.current.querySelectorAll('.timebtn');\n            [].some.call(buttons, (button, btnIndex) => {\n                left += button.offsetWidth;\n                return this.firstVisibleTimeIndex <= btnIndex;\n            });\n        }\n\n        console.log(this.firstVisibleTimeIndex);\n\n        timeButtons.style.left = -left + 'px';\n    }\n\n    resizeTimeButtons = () => {\n        const buttonWidth = this.getTimeButtonWidth();\n        this.timeLineRef.current.querySelectorAll('.timebtn').forEach(item => {\n            item.style.minWidth = buttonWidth + 'px';\n            item.style.maxWidth = buttonWidth + 'px';\n            item.style.width = buttonWidth + 'px';\n        });\n    };\n\n    scroll = (toRight = true) => {\n        const fromTime = this.state.selectedTime.label;\n        const timeButtons = this.timeLineRef.current.querySelector('.timeButtons');\n        const buttonsWrapper = this.timeLineRef.current.querySelector('.buttonsWrapper');\n        const prevBtn = this.timeLineRef.current.querySelector('.prev');\n        const nextBtn = this.timeLineRef.current.querySelector('.next');\n        let currentPos = parseInt(timeButtons.style.left) || 0;\n        let newPos = null;\n        const btnFrom = this.timeLineRef.current.querySelector(`button[data-label=\"${fromTime}\"]`);\n        let scrollStep = btnFrom.offsetWidth;\n\n        newPos = toRight ? currentPos - scrollStep : currentPos + scrollStep;\n\n        let leftPosLimit = 0;\n        // let rightPosLimit = timeButtons.offsetWidth + prevBtn.offsetWidth + nextBtn.offsetWidth;\n        let rightPosLimit = timeButtons.offsetWidth - buttonsWrapper.offsetWidth;\n\n        if (newPos >= leftPosLimit) {\n            newPos = 0;\n            prevBtn.setAttribute('disabled', true);\n        }\n        else {\n            prevBtn.removeAttribute('disabled');\n        }\n\n        if (Math.abs(newPos) >= rightPosLimit ) {\n            newPos = (-rightPosLimit);\n            nextBtn.setAttribute('disabled', true);\n        }\n        else {\n            nextBtn.removeAttribute('disabled');\n        }\n\n        timeButtons.style.left = newPos + 'px';\n\n    };\n\n    scrollToRight = () => {\n        this.firstVisibleTimeIndex++;\n        this.scroll();\n    }\n\n    scrollToLeft = () => {\n        this.firstVisibleTimeIndex--;\n        this.scroll(false);\n    }\n\n    scrollSwitch = (direction) => {\n        if (direction === 'left') {\n            this.scrollToLeft();\n        }\n        else if (direction === 'right') {\n            this.scrollToRight();\n        }\n    }\n\n    handleScrollMouseDown = (e, direction) => {\n        if (e.button !== 0) return;\n        e.stopPropagation();\n        console.log('handleScrollMouseDown', direction);\n        if (direction) {\n            this.mouseDownOnScrollInterval = setInterval(() => {\n                this.isMouseHoldedOnScroll = true;\n                console.log('handleScrollMouseDown timer', direction);\n                this.scrollSwitch(direction);\n            }, 300);\n        }\n    }\n\n    handleScrollMouseUp = (e, direction) => {\n        if (e.button !== 0) return;\n        e.stopPropagation();\n        if (!this.isMouseHoldedOnScroll) {\n            this.scrollSwitch(direction);\n        }\n        this.isMouseHoldedOnScroll = false;\n        clearInterval(this.mouseDownOnScrollInterval);\n    }\n\n    prepTimeLine(events = []) {\n        let timeLine = {};\n        this.timeLineData.items.forEach(item => {\n            let status = STATUSES.AVAILABLE;\n            let crossedOrPengingEvent = null;\n            if (events.length) {\n                events.some(event => {\n                    status = this.getStatus(item.date, event);\n                    crossedOrPengingEvent = event;\n                    return STATUSES.AVAILABLE !== status;\n                });\n            }\n            const selected = this.nowLabel === item.label;\n            timeLine[item.label] = {\n                label: item.label,\n                date: item.date,\n                event: crossedOrPengingEvent,\n                status: status,\n                className: selected ? 'selected' : '',\n                disabled: status !== STATUSES.AVAILABLE,\n            };\n        });\n        return timeLine;\n    }\n\n    handleTimeClick = (e) => {\n        e.currentTarget.classList.toggle('selected');\n        const label = e.currentTarget.dataset.label;\n        this.setTimeData(e.currentTarget);\n        this.changeTime(label);\n    };\n\n\n    setIntermediate = () => {\n        this.timeLineRef.current.querySelectorAll('.timebtn').forEach((btn, index) => {\n            if (this.timeData.timeIndex1 && index >= this.timeData.timeIndex1\n                && this.timeData.timeIndex2 && index <= this.timeData.timeIndex2) {\n                btn.classList.add('intermediate');\n            }\n            else {\n                btn.classList.remove('intermediate');\n            }\n        });\n    };\n\n    setTimeData(clickedBtn) {\n        let status = clickedBtn.dataset.status\n        let index = clickedBtn.dataset.index;\n        if (status !== STATUSES.AVAILABLE) {\n            return;\n        }\n\n        if (index === this.timeData.timeIndex1) {\n            this.timeData.timeIndex1 = NaN;\n            console.log('index === index1');\n            clickedBtn.classList.remove('postData');\n        }\n        else if (index === this.timeData.timeIndex2) {\n            this.timeData.timeIndex2 = NaN;\n            console.log('index === index2');\n            clickedBtn.classList.remove('postData');\n        }\n\n        else if(isNaN(this.timeData.timeIndex1)) {\n            this.timeData.timeIndex1 = index;\n            clickedBtn.classList.add('postData');\n        }\n        else if (isNaN(this.timeData.timeIndex2)) {\n            this.timeData.timeIndex2 = index;\n            clickedBtn.classList.add('postData');\n        }\n\n        else {\n            let prevBtn = null;\n            if (index < this.timeData.timeIndex1) {\n                prevBtn = this.timeLineRef.current.querySelector(`.timebtn[data-index=\"${this.timeData.timeIndex1}\"]`);\n                this.timeData.timeIndex1 = index;\n            }\n            else if (index > this.timeData.timeIndex1) {\n                prevBtn = this.timeLineRef.current.querySelector(`.timebtn[data-index=\"${this.timeData.timeIndex2}\"]`);\n                this.timeData.timeIndex2 = index;\n            }\n            prevBtn.classList.remove('postData');\n            clickedBtn.classList.add('postData');\n        }\n        this.setIntermediate();\n    }\n\n    changeTime = (label) => {\n        this.setState({ selectedTime: this.timeLine[label] });\n    }\n\n    isReservedByMe(event) {\n        return !!Math.round(Math.random(0,1));\n        // return event.user._id === this.props.userStore.user.id);\n    }\n\n    handleAddEvent = () => {\n        let args = [ this.room._id];\n        const timeIndexes = Object.values(this.timeData).filter(time => time);\n        timeIndexes.forEach(index => {\n            args.push(\n                dayjs(`${dayjs(this.date).format('YYYY-MM-DD')} ${this.timeLineData.items[index].label}`).format('YYYY-MM-DDTHH:mm')\n            );\n        });\n        const link = '/events/add/' + args.join('/');\n        this.setState({ redirectToAdd: link });\n    };\n\n    getStatus(time, event) {\n        let timeToCompare = dayjs(time).second(0).millisecond(0);\n        let dateStart = dayjs(event.date_start).second(0).millisecond(0);\n        let dateEnd = dayjs(event.date_end).second(0).millisecond(0);\n\n        let isCrossed = timeToCompare >= dateStart && timeToCompare < dateEnd\n        if (isCrossed) {\n            return STATUSES.RESERVED;\n        }\n\n        let isPending = timeToCompare >= dateStart.subtract(this.stepMinutes - 1, 'minute') && timeToCompare < dateEnd;\n        if(isPending) {\n            return STATUSES.PENDING;\n        }\n\n        return STATUSES.AVAILABLE\n    }\n    render() {\n        if (this.state.redirectToAdd) {\n            return <Redirect to={this.state.redirectToAdd}/>\n        }\n        console.info('  render RoomEvents room:', this.room.number);\n        return (\n            <div className={`roomEvents mdc-theme--primary-bg`}>\n                <div className=\"baseWrapper\">\n                    <EventDetails onSubmit={this.handleAddEvent}\n                        timeData={this.timeData} timeLineData={this.timeLineData}\n                        room={this.room} selectedTime={this.state.selectedTime} />\n                    {this.TimeLine()}\n                </div>\n            </div>\n        );\n    }\n\n\n    TimeLine() {\n        const buttonProps = (item, index) => {\n            const label = item.label;\n            const status = this.timeLine[label]['status'];\n            const className = `timebtn ${status} ${this.timeLine[label].className}`;\n            return {\n                id: `${this.room.number}-scrollable-auto-tab-${index}`,\n                'aria-controls': `${this.room.number}-scrollable-auto-tab-${index}`,\n                'aria-label': label,\n                key: index,\n                'data-label': label,\n                'data-index': index,\n                'data-status': status,\n                label: item.label,\n                className: className,\n                onClick: this.handleTimeClick,\n            };\n        };\n\n        return(\n            <div ref={this.timeLineRef} className=\"timeline\">\n                <Button data-direction=\"left\" className=\"prev\"\n                    onMouseDown={e => {\n                        this.handleScrollMouseDown(e, 'left');\n                    }}\n                    onMouseUp={e => {\n                        this.handleScrollMouseUp(e, 'left');\n                    }}>\n                    <ArrowLeftIcon/>\n                </Button>\n                <div className=\"buttonsWrapper loading\">\n                    <div className=\"timeButtons\">\n                        {this.timeLineData.items.map((item, index) => (\n                            <Button {...buttonProps(item, index)}>{item.label}</Button>\n                        ))}\n                    </div>\n                </div>\n                <Button data-direction=\"right\" className=\"next\"\n                    onMouseDown={e => {\n                        this.handleScrollMouseDown(e, 'right');\n                    }}\n                    onMouseUp={e => {\n                        this.handleScrollMouseUp(e, 'right');\n                    }}>\n                    <ArrowRightIcon/>\n                </Button>\n            </div>\n        );\n    }\n}\n\nfunction EventDetails(props) {\n    console.log('EventDetails render');\n    const room = props.room;\n    const selectedTime = props.selectedTime;\n\n    const status = selectedTime.status;\n\n    const renderEventInfo = () => {\n        switch(status) {\n            case STATUSES.PENDING:\n                return (\n                    <div className=\"pengindEvent\">\n                        <div>Event is comming soon</div>\n                        <div>Start in: {EventHelper.dateFormatClient(selectedTime.event.date_start, 'DD-MM-YYYY HH:mm')}</div>\n                        <div>Ends in: {EventHelper.dateFormatClient(selectedTime.event.date_end, 'HH:mm')}</div>\n                    </div>\n                );\n            case STATUSES.RESERVED:\n                return (\n                    <div className=\"roomReserved\">\n                        <div>Room is reserved</div>\n                        <div>Start in: {EventHelper.dateFormatClient(selectedTime.event.date_start, 'DD-MM-YYYY HH:mm')}</div>\n                        <div>Ends in: {EventHelper.dateFormatClient(selectedTime.event.date_end, 'HH:mm')}</div>\n                    </div>\n                );\n            default:\n                return '';\n        }\n    };\n    return(\n        <div className=\"infoWrapper\">\n            <div className={`statusBar ${status}`}></div>\n            <div className=\"detailsWrapper\">\n                <div className=\"details\">\n                    <div className=\"number\">Number: <strong>{room.number}</strong></div>\n                    <div className=\"title\">Title: <strong>{room.title}</strong></div>\n                    <div className=\"status\">Status: {status}</div>\n                </div>\n                {renderEventInfo()}\n                {status === STATUSES.AVAILABLE && (\n                    <div className=\"addEventWrapper\">\n                        <Button onClick={props.onSubmit} variant=\"contained\" color=\"secondary\"\n                        size=\"medium\" fullWidth type=\"submit\" className=\"addEvent\">Add event</Button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default RoomEvents;\n","import React from 'react';\n\nexport default class NoRooms extends React.Component {\n    render() {\n        return (\n            <div className=\"noRooms\">\n                <h2 className=\"text-center\">There are no conference rooms yet</h2>\n            </div>\n        );\n    }\n}\n","import Api from './api';\n\nclass RoomsApi extends Api {\n\n    list() {\n        return this.axios.get('/rooms/list');\n    }\n\n    getRoomsWithEventsOfDay(dateString) {\n        return this.axios.get('/rooms/roomsWithEventsOfDay/' + dateString);\n    }\n}\nexport default new RoomsApi();\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport memoize from 'memoize-one';\nimport {\n    Grid,\n    Container,\n    TextField,\n} from '@material-ui/core'\n\nimport DateUtils from '@date-io/dayjs';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BaseComponent, { RENDER_STATES as BASE_RENDER_STATES } from '../../components/BaseComponent'\nimport RoomEvents from '../../components/RoomEvents'\nimport Bayan from '../../components/Bayan'\nimport NoRooms from '../../components/NoRooms';\nimport ServerError from '../../components/ServerError';\nimport AppError from '../../components/AppError';\n\n\nimport CODES from '../../services/codes';\nimport roomsApi from '../../services/roomsApi'\n\nimport './index.scss';\n\nconst RENDER_STATES = { ...BASE_RENDER_STATES, NO_ROOMS: 'NO_ROOMS', UPDATE: 'UPDATE' };\n\n\nexport default class Events extends BaseComponent {\n    constructor(props) {\n        super(props);\n\n        this.stepMinutes = 30;\n        this.timeLineLabelFormat = 'HH:mm';\n\n        this.state = {\n            ...this.state,\n            // selectedDate: dayjs().add('1', 'day').format('YYYY-MM-DD'),\n            selectedDate: dayjs(),\n            roomsFilterValue: '',\n        };\n\n        this.prevRoomList = null;\n\n        this.roomEventsRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.loadRoomsWithEventsOfDay();\n    }\n\n    filter = memoize(\n        (list, filter) => {\n            let filteredField = 'title';\n            // check value is integer, n ^ 0 returns type number so we dont need strict equals\n            // and i dont need strict compare\n            if (this.state.roomsFilterValue == (this.state.roomsFilterValue ^ 0)) {\n                filteredField = 'number';\n            }\n            return this.state.rooms.filter(room => {\n                const re = new RegExp(this.state.roomsFilterValue, 'i');\n                return -1 !== room[filteredField].toString().search(re);\n            });\n        }\n    )\n\n    // getDate() {\n    //     return dayjs().startOf('day').toISOString()\n    // }\n\n    applyRoomFilterValue = (value) => {\n        this.setState({ roomsFilterValue: value });\n    }\n\n    async loadRoomsWithEventsOfDay(date = null) {\n        this.setState({ isLoading: true });\n        const datePost = date || this.state.selectedDate;\n        let resultState = {};\n        roomsApi.getRoomsWithEventsOfDay(datePost)\n            .then(({ response }) => {\n                const apiData = response.getApiData();\n                if (null === apiData.data || 'object' !== typeof apiData.data) {\n                    console.log('loadRoomsWithEvents->Invalid rooms data. Expected data object');\n                    return this.getServerErrorState('Invalid data from server');\n                }\n                if (!apiData.data.length) {\n                    return {\n                        renderState: RENDER_STATES.NO_ROOMS,\n                    };\n                }\n                // apiData.data.length = 1; // !!!!!!!!! for debug\n                const state = {\n                    rooms: apiData.data,\n                    renderState: RENDER_STATES.COMMON,\n                };\n                resultState = state;\n            })\n            .catch(({ error, response }) => {\n                const apiCode = response.getApiCode();\n                if (apiCode === CODES.ROOMS.INVALID_DATE) {\n                    console.log('Invalid date');\n                    resultState = this.getServerErrorState('Invalid date');\n                }\n                else {\n                    console.log('Invalid data from server');\n                    resultState = this.getServerErrorState('Invalid data from server');\n                }\n            })\n            .finally(() => {\n                this.setState({ isLoading: false, ...resultState});\n            });\n    }\n\n    handleRoomsFilterChange = (e) => {\n        this.setState({roomsFilterValue: e.target.value})\n    }\n\n    /*\n     * return object with timeline details for full day\n     * e.g. current time is 10:30\n    {\n        nowIndex: 0,\n            nowLabel: 10:30,\n            items[\n                {\n                    { label:00:00, date: new Date(00:00)},\n                    ...\n                    { label:23:30, date: new Date(23:30)}\n                }\n            ]\n    }\n    */\n    getTimeLine() {\n        const timeLineLen = (60 / this.stepMinutes) * 24;\n        let selectedDate = dayjs(this.state.selectedDate);\n        let now = dayjs();\n        // now = now.hour(1).minute(1);\n        let timeLineDate = dayjs(selectedDate).hour(now.hour()).minute(now.minute()).second(0).millisecond(0);\n\n        // for client last possible time button is 23:30\n        if (timeLineDate.hour() === 23 && timeLineDate.minute() > 30) {\n            timeLineDate = timeLineDate.minute(30);\n        }\n        else {\n            timeLineDate = timeLineDate.minute(this.stepMinutes * (Math.ceil(timeLineDate.minute() / this.stepMinutes)));\n        }\n\n        let nowLabel = null;\n        let nowIndex = null;\n        nowLabel = timeLineDate.format(this.timeLineLabelFormat);\n\n        // if (now.format('YYYY-MM-DD') !== timeLineDate.format('YYYY-MM-DD')) {\n        //     // for now working day starts at 09.00, but maybe in future its will be config from use profile page :)\n        //     // nowLabel = dayjs(timeLineDate).hour(9).format(this.timeLineLabelFormat);\n        // }\n        // else {\n        //     nowLabel = timeLineDate.format(timeLineLabelFormat);\n        // }\n        // const now = dayjs('18 apr 2021 23:00').second(0).millisecond(0);\n\n        const startOfDay = dayjs(timeLineDate).startOf('day');\n\n        let allItems = [];\n\n        for(let i = 0; i < timeLineLen; i++) {\n            let date = startOfDay.add(i * this.stepMinutes, 'minute')\n            let label = date.format(this.timeLineLabelFormat);\n\n            if (label === nowLabel) {\n                nowIndex = i;\n            }\n\n            allItems.push({\n                label: label,\n                date: date,\n            });\n        }\n\n        let timeLine = {\n            items: allItems,\n            nowLabel: nowLabel,\n            nowIndex: nowIndex,\n        };\n\n        return timeLine;\n\n    }\n\n    handleDateChange = async(date) => {\n        this.setState({ selectedDate: date, renderState: RENDER_STATES.UPDATE });\n        this.loadRoomsWithEventsOfDay(date);\n    }\n\n    render() {\n        console.info(' Events page render', this.state.renderState);\n        let component = null;\n        switch(this.state.renderState) {\n            case RENDER_STATES.FAILURE:\n                component = <ServerError data={this.state.serviceMessage}/>;\n                break;\n            case RENDER_STATES.INIT:\n                component = <Bayan/>;\n                break;\n            case RENDER_STATES.UPDATE:\n                component = this.prevRoomList;\n                break;\n            case RENDER_STATES.NO_ROOMS:\n                component = <NoRooms/>;\n                break;\n            case RENDER_STATES.COMMON:\n                this.timeLine = this.getTimeLine();\n                let rooms = null;\n                if (this.state.roomsFilterValue.length) {\n                    rooms = this.filter(this.state.rooms, this.state.roomsFilterValue);\n                }\n                else {\n                    rooms = this.state.rooms;\n                }\n                let breakPoints = { xs: 12, sm: 12, md: 6, lg: 6, xl: 6, };\n                let spacing = 4;\n\n                if (this.state.rooms.length === 1) {\n                    breakPoints = { xs: 12, sm: 12, md: 12, lg: 12, xl: 12, };\n                    spacing = 0;\n                }\n\n\n                const loopRooms = (rooms) => {\n                    const list = [];\n                    rooms.forEach(room => {\n                        list.push(\n                            <Grid key={room._id} item {...breakPoints}>\n                                <RoomEvents date={this.state.selectedDate} stepMinutes={this.stepMinutes} timeLine={this.timeLine} room={room}/>\n                            </Grid>\n                        );\n                    });\n                    return list;\n                };\n\n                component = (\n                    <>\n                        <Grid container className=\"filter\" justify=\"center\" spacing={4}>\n                            <Grid item xs={6} >\n                                <RoomFilter applyFilter={this.applyRoomFilterValue}\n                                    handleChange={this.handleRoomsFilterChange}\n                                    value={this.state.roomsFilterValue}/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <EventsDatePicker selectedDate={this.state.selectedDate} applyDate={this.handleDateChange}/>\n                            </Grid>\n                        </Grid>\n                        {!rooms.length && (\n                            <div className=\"filterEmptyResult\">\n                                <h2>No rooms founded</h2>\n                            </div>\n                        )}\n                        <Grid container className={`roomEvents roomsLen${rooms.length}`} spacing={spacing} ref={this.roomEventsRef}>\n                            {loopRooms(rooms)}\n                        </Grid>\n                    </>\n                );\n                this.prevRoomList = component;\n                break;\n            default:\n                component = <AppError/>;\n        }\n\n        return(\n            <Container maxWidth=\"md\" className={`events page ${String(this.state.renderState).toLowerCase()}`}>\n                {component}\n            </Container>\n        );\n    }\n}\n\nclass RoomFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { value: props.value };\n        this.timeout = null;\n        this.applyFilter = props.applyFilter;\n    }\n\n    handleChange = (e) => {\n        this.setState({ value: e.target.value });\n        clearTimeout(this.timeout);\n        setTimeout(() => {\n            this.applyFilter(this.state.value);\n        }, 400);\n    };\n    render() {\n        const inputLabelProps = { shrink: true, };\n        const inputProps = {\n            type: 'text',\n        };\n        return (\n            <div className=\"roomsFilterValueWrapper\">\n                <TextField label=\"Room\" inputProps={inputProps} InputLabelProps={inputLabelProps} id=\"roomsFilterValue\"\n                    onChange={this.handleChange}\n                    value={this.state.value} />\n            </div>\n        );\n    }\n}\n\nclass EventsDatePicker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { selectedDate: props.selectedDate };\n        this.timeout = null;\n        this.applyDate = props.applyDate;\n    }\n    handleChange = (date) => {\n        this.setState({ selectedDate: date });\n        setTimeout(() => {\n            clearTimeout(this.timeout);\n            this.applyDate(this.state.selectedDate);\n        }, 500);\n    }\n    render() {\n        const inputLabelProps = { shrink: true, };\n        return(\n            <MuiPickersUtilsProvider utils={DateUtils}>\n                <KeyboardDatePicker\n                    id=\"date-dialog\"\n                    label=\"Date\"\n                    format=\"YYYY/MM/DD\"\n                    InputLabelProps={inputLabelProps}\n                    value={this.state.selectedDate}\n                    onChange={this.handleChange}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n            </MuiPickersUtilsProvider>\n        );\n    }\n}\n","import { EventHelper } from '../includes/modelsHelpers';\n\nimport ApiDataTypeError from '../services/error';\nimport roomsApi from '../services/roomsApi'\nimport eventsApi from '../services/eventsApi'\nimport CODES from '../services/codes'\n\nimport BaseComponent, { RENDER_STATES as BASE_RENDER_STATES } from '../components/BaseComponent';\n\nexport const RENDER_STATES = {\n    ...BASE_RENDER_STATES,\n    NO_ROOMS: 'NO_ROOMS',\n    SAVED: 'SAVED',\n};\n\nexport default class SaveEvent extends BaseComponent {\n\n    getPostData() {\n        const dateStart = EventHelper.dateFormat(this.state.event.date_start);\n        const dateEnd = EventHelper.dateFormat(this.state.event.date_end);\n        const postData = {\n            room: this.state.event.room._id,\n            title: this.state.event.title,\n            description: this.state.event.description,\n            date_start: dateStart,\n            date_end: dateEnd,\n        };\n        return postData;\n\n    }\n\n    async loadRoomList(setRoomState = true) {\n        const result = await roomsApi.list();\n        if (result.error) {\n            if (result.error instanceof ApiDataTypeError) {\n                console.error('ApiDataTypeError');\n            }\n            console.log('Invalid data from server');\n            return this.getServerErrorState('Invalid data type from server');\n        }\n        else {\n            const apiData = result.response.getApiData();\n            if (false === Array.isArray(apiData['rooms'])) {\n                console.log('Invalid rooms data. Expected rooms[]');\n                return this.getServerErrorState('Invalid data from server');\n            }\n            const stateProps = {};\n            stateProps.serviceMessage = '';\n            stateProps.roomsList = apiData.rooms;\n            stateProps.renderState = RENDER_STATES.COMMON;\n            if (!apiData.rooms.length) {\n                stateProps.renderState = RENDER_STATES.NO_ROOMS;\n            }\n            else if (setRoomState) {\n                const _id = apiData.rooms[0]['_id'];\n                console.info('state.event', this.state.event);\n                stateProps.event = {...this.state.event, room: { _id: _id }};\n                console.info('stateProps', stateProps);\n            }\n            return stateProps;\n        }\n    }\n\n    async loadEventDetails() {\n        const result = await eventsApi.getEvent(this.state.event._id);\n        const apiData = result.response.getApiData();\n        const apiCode = result.response.getApiCode();\n        if (result.error) {\n            if (result.error instanceof ApiDataTypeError) {\n                console.error('ApiDataTypeError');\n                return this.getServerErrorState('Invalid data type from server');\n            }\n            else if (404 === result.response.status) {\n                console.log('Event not found');\n                return this.getServerErrorState('Event not found');\n            }\n            if (apiCode === CODES.EVENTS.DETAILS_ID_REQUIRED) {\n                console.log('eventId is required');\n                return this.getServerErrorState('Event Id is required');\n            }\n            else if (apiCode === CODES.EVENTS.DETAILS_ID_INVALID) {\n                console.log('Invalid eventId');\n                return this.getServerErrorState('Invalid event Id');\n            }\n            else {\n                console.log('Invalid data from server');\n                return this.getServerErrorState('Invalid data from server');\n            }\n        }\n        else {\n            console.info(apiData.event.user._id);\n            if ('object' !== typeof apiData.event) {\n                console.log('Invalid data. Expected object event');\n                return this.getServerErrorState('Invalid data from serverq');\n            }\n            else if (apiData.event.user._id !== this.props.userStore.user.id) {\n                console.log('owner error', this.props.userStore.user.id, apiData.event.user._id);\n                return this.getServerErrorState('Permission denined!');\n            }\n            else {\n                const state = {\n                    serviceMessage: '',\n                    renderState: RENDER_STATES.COMMON,\n                    event: apiData.event,\n                };\n                return state;\n            }\n        }\n    }\n\n    handleDateStartChange = (datetime) => {\n        let errors = this.state.errors;\n        const validate = this.validateDateStart(datetime);\n        true === validate ? delete errors.date_start : errors.date_start = validate;\n        this.setState({event: { ...this.state.event, date_start: datetime }});\n    };\n\n    handleDateEndChange = (datetime) => {\n        let errors = this.state.errors;\n        const validate = this.validateDateEnd(datetime);\n        true === validate ? delete errors.date_end : errors.date_end = validate;\n        this.setState({event: {...this.state.event, date_end: datetime}});\n    };\n\n    handleRoomChange = (e) => {\n        const event = this.state.event;\n        event.room._id = e.target.value;\n        this.setState({event: event});\n    };\n\n    handleTitleChange = (e) => {\n        let errors = this.state.errors;\n        const validate = this.validateTitle(e.target.value);\n        true === validate ? delete errors.title : errors.title = validate;\n        this.setState({event: { ...this.state.event, title: e.target.value, errors }});\n    };\n\n    handleDescriptionChange = (e) => {\n        this.setState({event: { ...this.state.event, description: e.target.value }});\n    };\n\n    validateDateStart = (dateStart = '') => {\n        const date = new Date(dateStart);\n        const valid = !isNaN(date.getTime());\n        return valid ? true : { message: 'Invalid date' };\n    }\n\n    validateDateEnd = (date) => {\n        const dateStart = new Date(this.state.event.date_start);\n        const dateEnd = new Date(date);\n        console.log('validateDateEnd');\n        console.log(dateStart, dateEnd);\n        if (isNaN(dateEnd.getTime())) {\n            return { message: 'Invalid date' };\n        }\n        if (dateStart >= dateEnd) {\n            return { message: 'should be future' };\n        }\n        return true;\n    }\n\n    validateTitle = (title = '') => {\n        const valid = title.length > 2;\n        return valid ? true : { message: 'Less than 3 symbols' };\n    }\n\n    validate = () => {\n        let errors = {};\n        let validate = null;\n        if (true !== (validate = this.validateDateStart(this.state.event.date_start))) {\n            errors.date_start = validate;\n        }\n        if (true !== (validate = this.validateDateEnd(this.state.event.date_end))) {\n            errors.date_end = validate;\n        }\n        if (true !== (validate = this.validateTitle(this.state.event.title))) {\n            errors.title = validate;\n        }\n\n        return Object.keys(errors).length ? errors : true;\n    };\n}\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport DateUtils from '@date-io/dayjs';\nimport { Link as routerLink } from 'react-router-dom';\nimport {\n    FormControl,\n    Select,\n    TextField,\n    MenuItem,\n    FormHelperText,\n    Button,\n    Grid,\n    Link,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport {\n    DateTimePicker,\n    KeyboardTimePicker,\n    MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport Bayan from '../../components/Bayan'\n\nimport './index.scss';\n\nexport default class EventForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.submitBtnText = this.props.action;\n    }\n    render() {\n        console.info('EventForm render');\n        console.log(this.props);\n        console.log('roomId', this.props.event.room._id);\n\n        return (\n            <Grid container spacing={3} className=\"eventForm\">\n                <Grid item xs={4}>\n                    <FormControl fullWidth error={!!this.props.errors && !!this.props.errors.room}>\n                    <FormHelperText>Rooms list</FormHelperText>\n                    <Select\n                        onChange={this.props.handleRoomChange}\n                        value={this.props.event.room._id}\n                    >\n                    {Array.isArray(this.props.roomsList) && this.props.roomsList.map((room, index) => (\n                        <MenuItem key={room._id} value={room._id}>{room.number}</MenuItem>\n                    ))}\n                    </Select>\n                    </FormControl>\n                </Grid>\n                <MuiPickersUtilsProvider utils={DateUtils}>\n                <Grid item xs={4}>\n                <FormControl error={!!this.props.errors && !!this.props.errors.date_start}>\n                    <FormHelperText>Start time</FormHelperText>\n                        <DateTimePicker\n                            value={this.props.event.date_start}\n                            ampm={false}\n                            minutesStep={5}\n                            onChange={this.props.handleDateStartChange} />\n                </FormControl>\n                </Grid>\n                <Grid item xs={4}>\n                    <FormControl error={!!this.props.errors && !!this.props.errors.date_end}>\n                        <FormHelperText>Time end</FormHelperText>\n                        <KeyboardTimePicker\n                            value={this.props.event.date_end}\n                            onChange={this.props.handleDateEndChange}\n                            minutesStep={5}\n                            ampm={false}\n                        />\n                    </FormControl>\n                </Grid>\n                </MuiPickersUtilsProvider>\n                <Grid item xs={4}>\n                    <FormControl error={!!this.props.errors && !!this.props.errors.title}>\n                        <FormHelperText>Title</FormHelperText>\n                        <TextField value={this.props.event.title} onChange={this.props.handleTitleChange}/>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={8}>\n                    <FormControl fullWidth error={!!this.props.errors && !!this.props.errors.description}>\n                        <FormHelperText>Description</FormHelperText>\n                        <TextField multiline fullWidth value={this.props.event.description} onChange={this.props.handleDescriptionChange}/>\n                    </FormControl>\n                </Grid>\n                {this.props.alert &&(\n                <Grid item xs={12}>\n                        <Alert severity={this.props.alert.severity}>\n                            {this.props.alert.message}\n                        </Alert>\n                </Grid>\n                )}\n                {this.props.serviceMessage &&(\n                    <Grid item className=\"qq\" xs={12}>\n                        <Alert severity=\"error\">\n                            <div>{this.props.serviceMessage}</div>\n                                {Array.isArray(this.props.crossedEvents) && this.props.crossedEvents.map((event, index) => (\n                                    <div className=\"crossedEvents\" key={index}>\n                                        {dayjs(event.date_start).format('DD-MM-YY HH:mm')}\n                                        -{dayjs(event.date_end).format('HH:mm')}\n                                        &nbsp; reserved by <Link component={routerLink} variant=\"inherit\" to={`/@${event.user.name}`}>{event.user.name}</Link>\n                                    </div>\n                                ))}\n                        </Alert>\n                    </Grid>\n                )}\n                <Grid item xs={12} className=\"bayanNearButton\">\n                    {this.props.isLoading && <Bayan/>}\n                </Grid>\n                <Grid item xs={12} className=\"btnContainer\">\n                    <Button disabled={this.props.isLoading} className=\"submit\" variant=\"contained\" fullWidth\n                        type=\"button\" color=\"secondary\" onClick={this.props.handleSubmit}>{this.props.action}\n                    </Button>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n","import React from 'react';\nimport { Skeleton } from '@material-ui/lab';\nimport { Grid, } from '@material-ui/core';\n\nexport default class EventFormSkeleton extends React.Component {\n    render() {\n        return (\n            <Grid container spacing={3}>\n                <Grid item xs={4}>\n                    <Skeleton height=\"4rem\"/>\n                </Grid>\n                <Grid item xs={4}>\n                    <Skeleton height=\"4rem\"/>\n                </Grid>\n                <Grid item xs={4}>\n                    <Skeleton height=\"4rem\"/>\n                </Grid>\n                <Grid item xs={4}>\n                    <Skeleton height=\"4rem\"/>\n                </Grid>\n                <Grid item xs={8}>\n                    <Skeleton height=\"4rem\"/>\n                </Grid>\n                <Grid item xs={12}>\n                    <Skeleton height=\"4rem\"/>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport { withRouter } from \"react-router\";\nimport { Link as routerLink } from 'react-router-dom';\nimport { Container, Link } from '@material-ui/core';\n\nimport eventsApi from '../../services/eventsApi';\nimport ApiDataTypeError from '../../services/error';\nimport CODES from '../../services/codes';\n\nimport { Event } from '../../includes/models';\nimport { EventHelper } from '../../includes/modelsHelpers';\n\nimport SaveEvent, { RENDER_STATES } from '../../components/SaveEvent';\nimport EventForm from '../../components/EventForm';\nimport NoRooms from '../../components/NoRooms';\nimport EventFormSkeleton from '../../components/EventFormSkeleton';\nimport ServerError from '../../components/ServerError';\nimport AppError from '../../components/AppError';\n\nimport './index.scss';\n\n\n@withRouter\nclass AddEvent extends SaveEvent {\n    constructor(props) {\n        super(props)\n        this.state = {\n            ...this.state,\n            roomsList: [],\n            createdEvent: null,\n            crossedEvents: null,\n        };\n        this.initEventState();\n        this.handleAddEvent = this.handleAddEvent.bind(this);\n    }\n\n    initEventState() {\n        const defaultStartFrom = new Date();\n        defaultStartFrom.setMinutes(5 * (Math.round(defaultStartFrom.getMinutes() / 5)));\n        let defaultEvent = new Event({\n            date_start: defaultStartFrom,\n            date_end: dayjs(defaultStartFrom).add(30, 'minute'),\n        });\n\n        if (this.props.match.params.roomId) {\n            this.state.event = this.getEventFromUrl(defaultEvent);\n        }\n        else {\n            this.state.event = defaultEvent;\n        }\n    }\n\n    getEventFromUrl(event = {}) {\n        const roomId = this.props.match.params.roomId;\n        const dateFrom = this.props.match.params?.from ? dayjs(this.props.match.params.from) : undefined;\n        const dateTo = this.props.match.params?.to? dayjs(this.props.match.params.to) : undefined;\n\n        event.room = { _id: roomId, };\n\n        if (dateFrom && dateFrom.isValid()) {\n            event.date_start = dateFrom;\n            event.date_end = dateTo && dateTo.isValid() ? dateTo : dateFrom.add(30, 'minute');\n        }\n\n        return event;\n    }\n\n\n    async componentDidMount() {\n        this.setState({ isLoading: false, });\n        const setRoomState = !(this.state.event.room?._id);\n        const newStateOpts = await this.loadRoomList(setRoomState);\n        this.setState({ ...newStateOpts, isLoading: false, });\n    }\n\n    async addEvent() {\n        const postData = this.getPostData();\n        console.info('addEvent with:', postData);\n        const result = await eventsApi.addEvent(postData);\n        if (result.error) {\n            const apiCode = result.response.getApiCode();\n            const apiData = result.response.getApiData();\n            const apiMessage = result.response.getApiMessage();\n            if (apiCode === CODES.EVENTS.VALIDATION) {\n                const errorFields = result.response.getErrorFields();\n                console.log('AddEvent->Validation error', errorFields);\n                return this.getValidationErrorState('Validation error', errorFields);\n            }\n            else if (apiCode === CODES.EVENTS.CROSS_DATES) {\n                const dbEvents = apiData.events;\n                if (false === Array.isArray(dbEvents)) {\n                    console.log('Expected array of events from database', apiMessage);\n                    return this.getServerErrorState('Invalid data from server');\n                }\n                const errorFields = {date_start: true, date_end: true};\n                const serviceMessage = 'Date is crossed with enother events';\n                console.log('AddEvent->Validation error', errorFields);\n                return this.getValidationErrorState(serviceMessage, errorFields, {crossedEvents:dbEvents});\n            }\n            else if (apiCode === CODES.EVENTS.ROOM_NOT_EXISTS) {\n                const serviceMessage = 'Room does not exist. Please try another room';\n                console.log('Room does not exists', apiMessage);\n                return this.getValidationErrorState(serviceMessage);\n            }\n            else if (apiCode === CODES.EVENTS.ROOM_NOT_ACTIVE) {\n                const serviceMessage = 'Room is closed. Please try another room';\n                console.log('Room not active', apiMessage);\n                return this.getValidationErrorState(serviceMessage);\n            }\n            else {\n                if (result.error instanceof ApiDataTypeError) {\n                    console.error('addEvent->ApiDataTypeError');\n                }\n                console.log('AddEvent->Invalid data from server', result.error);\n                return this.getServerErrorState('Invalid data from server');\n            }\n        }\n        else {\n            const apiData = result.response.getApiData();\n            if (null === apiData.event || 'object' !== typeof apiData.event) {\n                console.log('addEvent>Invalid rooms data. Expected event object');\n                console.log(apiData);\n                return this.getServerErrorState('Invalid data from server');\n            }\n            if (!apiData.event._id) {\n                console.log('addEvent>Invalid rooms data. Expected event id');\n                console.log(apiData);\n                return this.getServerErrorState('Invalid data from server');\n            }\n            const state = {\n                renderState: RENDER_STATES.SAVED,\n                createdEvent: apiData.event,\n            };\n            return state;\n        }\n    }\n\n    async handleAddEvent() {\n        let validate = this.validate();\n        if (true !== validate ) {\n            this.setState({ errors: validate });\n            return;\n        }\n        this.setState({\n            isLoading: true,\n            errors: {},\n        });\n        const newStateOpts = await this.addEvent();\n        this.setState({\n            isLoading: false,\n            ...newStateOpts,\n        });\n    }\n\n    render() {\n        console.info('render', this.state.renderState);\n        let component = null;\n        switch(this.state.renderState) {\n            case RENDER_STATES.SAVED:\n                component = <EventCreated event={this.state.createdEvent}/>;\n                break;\n            case RENDER_STATES.NO_ROOMS:\n                component = <NoRooms/>;\n                break;\n            case RENDER_STATES.FAILURE:\n                component = <ServerError data={this.state.serviceMessage}/>;\n                break;\n            case RENDER_STATES.INIT:\n                component = <EventFormSkeleton/>;\n                break;\n            case RENDER_STATES.COMMON:\n                component = (\n                    <>\n                        <h2 className=\"text-center\">Add event</h2>\n                        <EventForm\n                            isLoading={this.state.isLoading}\n                            errors={this.state.errors}\n                            serviceMessage={this.state.serviceMessage}\n                            roomsList={this.state.roomsList}\n                            crossedEvents={this.state.crossedEvents}\n\n                            action=\"add\"\n                            renderState={this.state.renderState}\n\n                            event={this.state.event}\n\n                            handleRoomChange={this.handleRoomChange}\n                            handleDateStartChange={this.handleDateStartChange}\n                            handleDateEndChange={this.handleDateEndChange}\n                            handleTitleChange={this.handleTitleChange}\n                            handleDescriptionChange={this.handleDescriptionChange}\n                            handleSubmit={this.handleAddEvent}\n                        />\n                    </>\n                );\n                break;\n            default:\n                component = <AppError data=\"Application error\"/>;\n        }\n\n        return(\n            <Container maxWidth=\"md\" className={`addEvent page ${String(this.state.renderState).toLowerCase()}`}>\n                {component}\n            </Container>\n        );\n    }\n}\n\nfunction EventCreated(props) {\n    return (\n        <div className=\"created text-center\">\n            <h2>Event created successfuly in room #{props.event.room.number}.</h2>\n            <p>Start at: {EventHelper.dateFormat(props.event.date_start, 'DD-MM-YYYY HH:mm')}</p>\n            <p>End at: {EventHelper.dateFormat(props.event.date_end, 'DD-MM-YYYY HH:mm')}</p>\n            <p>\n                You can <Link component={routerLink} variant=\"inherit\" to={`/events/change/${props.event._id}`}>change</Link>&nbsp;or&nbsp;\n                <Link component={routerLink} variant=\"inherit\" to={`/events/delete/${props.event._id}`}>delete</Link>\n            </p>\n        </div>\n    );\n}\n\nexport default AddEvent;\n","import React from 'react';\nimport { Container } from '@material-ui/core';\n\nimport { inject } from 'mobx-react';\n\nimport eventsApi from '../../services/eventsApi';\nimport ApiDataTypeError from '../../services/error';\nimport CODES from '../../services/codes';\n\nimport { Event } from '../../includes/models';\n\nimport SaveEvent, { RENDER_STATES } from '../../components/SaveEvent';\nimport EventForm from '../../components/EventForm'\nimport EventFormSkeleton from '../../components/EventFormSkeleton';\nimport NoRooms from '../../components/NoRooms';\nimport ServerError from '../../components/ServerError';\nimport AppError from '../../components/AppError';\n\nimport './index.scss';\n\n\n@inject('userStore')\nclass ChangeEvent extends SaveEvent {\n    constructor(props) {\n        super(props)\n        const eventId = this.props.match.params.id;\n        const eventModel = new Event({\n            _id: eventId,\n        });\n        this.state = {\n            ...this.state,\n            event: eventModel,\n            roomsList: [],\n            changed: false,\n            crossedEvents: null,\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({ isLoading: true, });\n        let roomState = await this.loadRoomList(false);\n        if ('renderState' in roomState && roomState.renderState !== RENDER_STATES.COMMON) {\n            this.setState({...roomState, isLoading: false});\n            return;\n        }\n        let eventState = await this.loadEventDetails();\n        if ('renderState' in eventState && eventState.renderState !== RENDER_STATES.COMMON) {\n            this.setState({...eventState, isLoading: false});\n            return;\n        }\n        else {\n            this.setState({...roomState, ...eventState, isLoading: false,});\n        }\n    }\n\n    async changeEvent() {\n        const postData = this.getPostData();\n        console.info('changeEvent with:', postData);\n        const result = await eventsApi.changeEvent(this.state.event._id, postData);\n        if (result.error) {\n            const apiCode = result.response.getApiCode();\n            const apiData = result.response.getApiData();\n            const apiMessage = result.response.getApiMessage();\n            if (apiCode === CODES.EVENTS.NOT_BELONG_TO_YOU) {\n                console.log('permission error', apiMessage);\n                return this.getServerErrorState('Permission denined!');\n            }\n            else if (apiCode === CODES.EVENTS.VALIDATION) {\n                const errorFields = result.response.getErrorFields();\n                console.log('changeEvent->Validation error', errorFields);\n                return this.getValidationErrorState('Validation error', errorFields);\n            }\n            else if (apiCode === CODES.EVENTS.CROSS_DATES) {\n                const dbEvents = apiData.events;\n                if (false === Array.isArray(dbEvents)) {\n                    console.log('Expected array of events from database', apiMessage);\n                    return this.getServerErrorState('Invalid data from server');\n                }\n                const errorFields = {date_start: true, date_end: true};\n                const serviceMessage = 'Date is crossed with enother events';\n                console.log('changeEvent->Validation error', errorFields);\n                this.getValidationErrorState(serviceMessage, errorFields, {crossedEvents:dbEvents});\n            }\n            else if (apiCode === CODES.EVENTS.ROOM_NOT_EXISTS) {\n                const serviceMessage = 'Room does not exist. Please try another room';\n                console.log('Room does not exists', apiMessage);\n                return this.getValidationErrorState(serviceMessage);\n            }\n            else if (apiCode === CODES.EVENTS.ROOM_NOT_ACTIVE) {\n                const serviceMessage = 'Room is closed. Please try another room';\n                console.log('Room not active', apiMessage);\n                return this.getValidationErrorState(serviceMessage);\n            }\n            else {\n                if (result.error instanceof ApiDataTypeError) {\n                    console.error('changeEvent->ApiDataTypeError');\n                }\n                console.log('changeEvent->Invalid data from server', result.error);\n                return this.getServerErrorState('Invalid data from server');\n            }\n        }\n        else {\n            const apiData = result.response.getApiData();\n            if (null === apiData.event || 'object' !== typeof apiData.event) {\n                console.log('changeEvent->Invalid rooms data. Expected event object');\n                console.log(apiData);\n                return this.getServerErrorState('Invalid data from server');\n            }\n            if (!apiData.event._id) {\n                console.log('changeEvent>Invalid rooms data. Expected event id');\n                console.log(apiData);\n                return this.getServerErrorState('Invalid data from server');\n            }\n\n            return {\n                changedEvent: apiData.event,\n                renderState: RENDER_STATES.SAVED,\n            };\n        }\n    }\n\n    handleSubmit = async () => {\n        const validate = this.validate();\n        if (true !== validate) {\n            this.setState({ errors: validate });\n            return;\n        }\n        this.setState({\n            isLoading: true,\n            errors: {},\n            changed: false,\n            serviceMessage: '',\n            renderState: RENDER_STATES.COMMON,\n        });\n        const state = await this.changeEvent();\n        this.setState({ isLoading: false, ...state });\n    }\n\n    render() {\n        console.info('render', this.state.renderState);\n        let alert = null;\n        let component = null;\n        if (this.state.renderState === RENDER_STATES.SAVED) {\n            alert = { message: 'Event saved', severity: 'success' };\n        }\n        switch(this.state.renderState) {\n            case RENDER_STATES.NO_ROOMS:\n                component = <NoRooms/>;\n                break;\n            case RENDER_STATES.FAILURE:\n                component = <ServerError data={this.state.serviceMessage}/>;\n                break;\n            case RENDER_STATES.INIT:\n                component = (\n                    <>\n                        <h2 className=\"text-center\">Change event</h2>\n                        <EventFormSkeleton/>\n                    </>\n                );\n                break;\n            case RENDER_STATES.SAVED:\n            case RENDER_STATES.COMMON:\n                component = (\n                    <>\n                        <h2 className=\"text-center\">Change event</h2>\n                        <EventForm\n                        isLoading={this.state.isLoading}\n                        errors={this.state.errors}\n                        serviceMessage={this.state.serviceMessage}\n                        roomsList={this.state.roomsList}\n                        crossedEvents={this.state.crossedEvents}\n\n                        action=\"change\"\n                        componentStatus={this.state.componentStatus}\n\n                        event={this.state.event}\n                        alert={alert}\n\n                        handleRoomChange={this.handleRoomChange}\n                        handleStartDateTimeChange={this.handleStartDateTimeChange}\n                        handleDateEndChange={this.handleDateEndChange}\n                        handleTitleChange={this.handleTitleChange}\n                        handleDescriptionChange={this.handleDescriptionChange}\n                        handleSubmit={this.handleSubmit} />\n                    </>\n                );\n                break;\n            default:\n                component = <AppError data=\"Application error\"/>;\n        }\n\n        return(\n            <Container maxWidth=\"md\" className={`addEvent page ${String(this.state.renderState).toLowerCase()}`}>\n                {component}\n            </Container>\n        );\n    }\n}\n\nexport default ChangeEvent;\n","import React from 'react';\nimport { Link as routerLink } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\n\nimport { inject } from 'mobx-react';\nimport dayjs from 'dayjs';\nimport {\n    Container,\n    Grid,\n    Button,\n} from '@material-ui/core';\n\nimport { Event } from '../../includes/models';\n\nimport eventsApi from '../../services/eventsApi';\nimport CODES from '../../services/codes';\n\nimport SaveEvent, { RENDER_STATES } from '../../components/SaveEvent';\nimport Bayan from '../../components/Bayan'\nimport NoRooms from '../../components/NoRooms';\nimport ServerError from '../../components/ServerError';\nimport AppError from '../../components/AppError';\n\nimport './index.scss';\n\n\n@inject('userStore')\n@withRouter\nclass DeleteEvent extends SaveEvent {\n    constructor(props) {\n        super(props)\n        const eventId = this.props.match.params.id;\n        const eventModel = new Event({\n            _id: eventId,\n        });\n        this.state = { ...this.state, event: eventModel }\n    }\n\n    async componentDidMount() {\n        this.setState({ isLoading: true, });\n        const newProps = await this.loadEventDetails();\n        this.setState({\n            isLoading: false,\n            ...newProps,\n        });\n    }\n\n    deleteEvent = async() => {\n        const result = await eventsApi.deleteEvent(this.state.event._id);\n        const apiMessage = result.response.getApiMessage();\n        const apiCode = result.response.getApiCode();\n        if (result.error) {\n            if (apiCode === CODES.EVENTS.NOT_BELONG_TO_YOU) {\n                console.log('permission error', apiMessage);\n                return this.getServerErrorState('Permission denined!');\n            }\n            else {\n                console.log('server error', apiMessage);\n                return this.getServerErrorState('Server error');\n            }\n        }\n        else {\n            return { renderState: RENDER_STATES.SAVED };\n        }\n    }\n\n    handleDeleteEvent = async() => {\n        console.log('handleDeleteEvent');\n        this.setState({ isLoading: true });\n        const newProps = await this.deleteEvent();\n        this.setState({ isLoading: false, ...newProps });\n    };\n\n    render() {\n        let component = null;\n        switch(this.state.renderState) {\n            case RENDER_STATES.INIT:\n                component = <Bayan/>;\n                break;\n            case RENDER_STATES.NO_ROOMS:\n                component = <NoRooms/>;\n                break;\n            case RENDER_STATES.FAILURE:\n                component = <ServerError data={this.state.serviceMessage}/>;\n                break;\n            case RENDER_STATES.SAVED:\n                component = <EventDeleted/>;\n                break;\n            case RENDER_STATES.COMMON:\n                console.log(this.state.event);\n                component = <DeleteComfirm handleDeleteEvent={this.handleDeleteEvent} isLoading={this.state.isLoading} event={this.state.event}/>;\n                break;\n            default:\n                component = <AppError data=\"Application error\"/>;\n        }\n        return (\n            <Container maxWidth=\"md\" className={`addEvent page ${this.state.renderState}`}>\n                {component}\n            </Container>\n        );\n    }\n}\n\nfunction DeleteComfirm(props) {\n    return(\n        <>\n            <h2 className=\"text-center\">Are you sure to delete event?</h2>\n            <Grid className=\"eventDetails\">\n                <p><b>Room#:</b> {props.event.room.number}</p>\n                <p><b>Title:</b> {props.event.title}</p>\n                <p><b>Description:</b> {props.event.description}</p>\n                <p><b>Date start:</b> {dayjs(props.event.date_start).format('DD-MM-YYYY HH:mm')}</p>\n                <p><b>Date end:</b> {dayjs(props.event.date_end).format('DD-MM-YYYY HH:mm')}</p>\n            </Grid>\n            <Grid container className=\"btnContainer\">\n                <Button disabled={props.isLoading} className=\"btnAddEvent\" variant=\"contained\" fullWidth\n                    type=\"button\" color=\"secondary\" onClick={props.handleDeleteEvent}>Delete event\n                </Button>\n                {props.isLoading && <Bayan/>}\n            </Grid>\n        </>\n    );\n\n}\n\nfunction EventDeleted(props) {\n    return(\n        <>\n            <div className=\"created text-center\">\n                <h2>Event deleted successfuly.</h2>\n                <Grid container className=\"btnContainer\">\n                    <Button component={routerLink} to=\"/events/add\" variant=\"contained\" color=\"secondary\" fullWidth type=\"submit\">\n                        Add event\n                    </Button>\n                </Grid>\n            </div>\n        </>\n    );\n}\n\nexport default DeleteEvent;\n","import React from 'react';\n\nimport './index.scss'\n\n const Page404 = ({ location }) => (\n   <div className=\"page404 page\">\n      <h3 className=\"text-center\">No match found for <code>{location.pathname}</code></h3>\n   </div>\n);\n\nexport default Page404;\n","import React from 'react';\nimport Button from '@material-ui/core/Button'\n\nimport './index.scss'\n\nexport default class ServerError extends React.Component {\n\n\treloadWindow() {\n\t\twindow.location.reload();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"serverError page\">\n\t\t\t\t<center>\n\t\t\t\t\t<h2>Hmm. We’re having trouble loading that application</h2>\n\t\t\t\t\t<Button variant=\"contained\" type=\"button\" color=\"secondary\" onClick={this.reloadWindow}>reload</Button>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button'\n\nimport './index.scss'\n\nexport default class AppError extends React.Component {\n\n\treloadWindow() {\n\t\twindow.location.reload();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"appError page\">\n\t\t\t\t<center>\n                    <h2 className=\"error\">Something went wrong.</h2>\n\t\t\t\t\t<Button variant=\"contained\" type=\"button\" color=\"secondary\" onClick={this.reloadWindow}>reload</Button>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button'\n\nimport './index.scss'\n\nexport default class Offline extends React.Component {\n\n\treloadWindow() {\n\t\twindow.location.reload();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"offline page\">\n\t\t\t\t<center>\n\t\t\t\t\t<h2>No internet connection</h2>\n\t\t\t\t\t<Button variant=\"contained\" type=\"button\" color=\"secondary\" onClick={this.reloadWindow}>reload</Button>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import axios from \"axios\";\nexport default axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL + '/admin'\n});","import api from './adminApi.js';\n\nexport const getRooms = async () => {\n\ttry {\n\t\treturn await api.get('/rooms');\n\t}\n\tcatch (error) {\n\t\treturn {\n\t\t\t\terror: true,\n\t\t\t\tresponse: error.response\n\t\t\t};\n\t}\n}\n\nexport const saveRooms = async (rooms) => {\n\ttry {\n\t\treturn await api.post('/rooms', {rooms: rooms});\n\t}\n\tcatch (error) {\n\t\treturn {\n\t\t\terror: true,\n\t\t\tresponse: error.response\n\t\t}\n\t}\n}\n\nexport const deleteRoom = async (id) => {\n\ttry {\n\t\tconsole.log('axios deleteRoom width id: ' + id)\n\t\treturn await api.delete(`/rooms/${id}`);\n\t}\n\tcatch (error) {\n\t\treturn {\n\t\t\terror: true,\n\t\t\tresponse: error.response\n\t\t}\n\t}\n}\n\nexport const validateInputFields = (fields, data = false) => {\n    const fieldNames = 'string' === typeof fields ? [fields] : fields;\n    if (Array.isArray(fieldNames)) {\n        const errors = {};\n        fieldNames.forEach(field => {\n            if ('title' === field && !validateRoomTitle(data.title)) {\n                errors.title = 'Atleast 3 characaters required';\n            }\n            if ('number' === field && !validateRoomNumber(data.number)) {\n                errors.number = 'Invalid number';\n            }\n        });\n        \n        return Object.keys(errors).length ? errors : true;\n    }\n}\n\nfunction validateRoomTitle(title = false) {\n  return 'string' === typeof title && title.length >= 3;\n}\n\nfunction validateRoomNumber(number = false) {\n  console.log('number', number)\n  return (!isNaN(number) && number !== '');\n}","import React from 'react';\nimport {\n\tContainer,\n\tButton,\n\tIconButton,\n\tTextField,\n\tCircularProgress,\n\tFormControl,\n} from '@material-ui/core';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport {\n    Delete as DeleteIcon,\n    LockOutlined as LockIcon,\n    LockOpenOutlined as LockOpenIcon,\n    Refresh as RefreshIcon\n} from '@material-ui/icons';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {\n\tgetRooms as getRoomsApi,\n\tsaveRooms as saveRoomsApi,\n\tdeleteRoom as deleteRoomApi,\n\tvalidateInputFields,\n} from '../../../services/admin/rooms'\n\nimport './index.scss';\n\n\nclass adminRooms extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.addRoomHandler = this.addRoomHandler.bind(this);\n\t\tthis.removeRoomHandler = this.removeRoomHandler.bind(this);\n\t\tthis.toggleStatusHandler = this.toggleStatusHandler.bind(this);\n\t\tthis.loadRooms = this.loadRooms.bind(this);\n\n\t\tthis.inputTimeoutx = null;\n\t\tthis.inputSavingDelay = 500;\n\t\tthis.fields = {\n\t\t\tnumber: {\n\t\t\t\trequired: true,\n\t\t\t\ttext: 'Number',\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\trequired: true,\n\t\t\t\ttext: 'Title'\n\t\t\t},\n\t\t\tstatus: {\n\t\t\t\ttext: 'Status'\n\t\t\t}\n\t\t}\n\n\t\tthis.state = {\n\t\t\troomList: {\n\t\t\t\tpage: 1,\n\t\t\t\trooms: []\n\t\t\t},\n\t\t\tisLoading: false,\n\t\t\tisLoaded: false,\n\t\t\terrorMessage: '',\n\t\t};\n\t}\n\tgetNewRoomSceleton() {\n\t\tconst rooms = this.state.roomList.rooms;\n\t\treturn {\n\t\t\t_id: rooms.length,\n\t\t\tnumber: '',\n\t\t\ttitle: '',\n\t\t\tstatus: 'CLOSED',\n\t\t\t// isNew nean room not yet stored in database\n\t\t\tisNew: true\n\t\t}\n\t}\n\tgetRequiredFields() {\n\t\treturn Object.keys(this.fields).filter(field => true === this.fields[field].required);\n\t}\n\n\tscrollTop() {\n    \tconst element = document.querySelector('.rooms')\n    \tif (element) {\n    \t\telement.scrollIntoView({behavior: \"smooth\"});\n    \t}\n\t}\n\n\tsetErrorMessage(msg, scroll = true) {\n\t\tthis.setState({errorMessage: msg});\n\t\tif (scroll) {\n\t\t\tthis.scrollTop();\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.loadRooms();\n\t}\n\n\tasync loadRooms() {\n\t\tthis.setState({isLoading: true});\n\t\tconst result = await getRoomsApi();\n\t\tthis.setState({isLoading: false, isLoaded: true});\n\t\tconst rooms = result.data?.data?.rooms ? result.data.data.rooms : [];\n\t\tif (result.error || !(Array.isArray(rooms))) {\n\t\t\tconst errorMessage = 'Data loading failure';\n\t\t\tthis.setErrorMessage(errorMessage);\n\t\t\treturn false;\n\t\t}\n\t\tthis.setState({\n\t\t\terrorMessage: '',\n\t\t\troomList:{rooms: rooms}\n\t\t});\n\t}\n\n\tasync toggleStatusHandler(roomId) {\n\t\tif (!roomId) {\n\t\t\tconsole.error('roomId is required');\n\t\t\treturn;\n\t\t}\n\t\tlet rooms = this.state.roomList.rooms;\n\t\tlet room = rooms.find(room => room._id === roomId);\n\n\t\tif (!room) {\n\t\t\tconsole.error(`Room with id:${roomId} doesn't exist`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst status = room.status === 'CLOSED' ? 'ACTIVE' : 'CLOSED';\n\t\troom['status'] = status;\n\t\tif (room.isNew) {\n\t\t\ttry {\n\t\t\t\tawait this.createNewRoom(room, {status: status});\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.error('toggleStatusHandler->createNewRoom', err)\n\t\t\t\tthis.setErrorMessage(err.message)\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\ttry{\n\t\t\t\tawait this.updateRoom(room, {status: status});\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis.setErrorMessage(err.message)\n\t\t\t\tconsole.error('toggleStatusHandler->updateRoom', err)\n\t\t\t}\n\t\t}\n\t\tthis.setState({roomList: {rooms: rooms}})\n\t}\n\n\tasync updateRoomHandler(e, roomId) {\n\t\tconst fieldName = e.target.name;\n\t\tif (!['number', 'title'].includes(fieldName)) {\n\t\t\tconsole.error('invalid target field')\n\t\t\treturn;\n\t\t}\n\t\tconst value = e.target.value;\n\t\tconst data = {[fieldName]: value};\n\t\tconst rooms = this.state.roomList.rooms;\n\t\tconst room = rooms.find(room => room._id === roomId);\n\t\troom[fieldName] = value;\n\t\tclearTimeout(this.inputTimeoutx);\n\t\tif (!room) {\n\t\t\tconsole.err('updateRoomHandler nothing to save');\n\t\t\treturn;\n\t\t}\n\t\tthis.inputTimeoutx = setTimeout(async () => {\n\t\t\tif (room.isNew) {\n\t\t\t\ttry{\n\t\t\t\t\tawait this.createNewRoom(room);\n\t\t\t\t}\n\t\t\t\tcatch(err) {\n\t\t\t\t\tthis.setErrorMessage(err.message)\n\t\t\t\t\tconsole.log('updateRoomHandler-> createNewRoom', err)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\ttry{\n\t\t\t\t\tawait this.updateRoom(room, data);\n\t\t\t\t}\n\t\t\t\tcatch(err) {\n\t\t\t\t\tthis.setErrorMessage(err.message)\n\t\t\t\t\tconsole.log('updateRoomHandler-> updateRoom', err)\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({roomList: {rooms: rooms}})\n\n\t\t}, this.inputSavingDelay);\n\n\t}\n\n\tasync addRoomHandler() {\n\t\tconst rooms = this.state.roomList.rooms;\n\t\trooms.push(this.getNewRoomSceleton());\n\t\tthis.setState({roomList: {rooms: rooms}})\n\t}\n\n\tasync removeRoomHandler(roomId) {\n\t\tconst rooms = this.state.roomList.rooms;\n\t\tlet needleRoom = false;\n\t\tlet roomsFiltered = rooms.filter(room => {\n\t\t\tif (room._id === roomId) {\n\t\t\t\tneedleRoom = room;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tif (!needleRoom) {\n\t\t\tconsole.error('Nothing to delete');\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst deletedRes = this.deleteRoom(needleRoom);\n\t\t\tif (deletedRes) {\n\t\t\t\tthis.setState({roomList: {rooms: roomsFiltered}});\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\tthis.setErrorMessage(err.message)\n\t\t}\n\t}\n\n\tasync deleteRoom(room) {\n\t\tif (room.isNew) {\n\t\t\treturn room;\n\t\t}\n\t\telse {\n\t\t\tconst deleteRes = await deleteRoomApi(room._id);\n\t\t\tif (deleteRes.error) {\n\t\t\t\t// room was delete before from server, need to remove from client\n\t\t\t\tif (1104 === deleteRes.response.data.code) {\n\t\t\t\t\treturn room;\n\t\t\t\t}\n\t\t\t\tthrow new Error('Server Failure while removing');\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn room;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync createNewRoom(room) {\n\t\tif (!room.isNew) {\n\t\t\tthrow new Error('This room in database')\n\t\t}\n\t\tconst requiredFields = this.getRequiredFields();\n\t\troom.errors = {}\n\t\tconst validationRes = validateInputFields(requiredFields, room);\n\t\tif (true !== validationRes) {\n\t\t\troom.errors = validationRes;\n\t\t\treturn room;\n\t\t}\n\t\tconst postData = {};\n\t\trequiredFields.forEach(field => {\n\t\t\tpostData[field] = room[field];\n\t\t})\n\t\tconst result = await saveRoomsApi(postData);\n\t\tif (result.error) {\n\t\t\tconst errorFields = result.response.data.data?.fields;\n\t\t\tif (errorFields && 'object' === typeof errorFields) {\n\t\t\t\tconst fields = Object.keys(errorFields);\n\t\t\t\tfields.forEach(field => room.errors[field] = true)\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst newId = result.data.data?.room._id;\n\t\t\tif (newId) {\n\t\t\t\troom._id = newId;\n\t\t\t\tdelete room.isNew;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error('Missed room id from server response')\n\t\t\t}\n\n\t\t}\n\t\treturn room;\n\t}\n\n\tasync updateRoom(room, data = false) {\n\t\tif (room.isNew) {\n\t\t\tthrow new Error('This room does not exists in database');\n\t\t}\n\t\tif ('object' !== typeof data) {\n\t\t\tconsole.log(data);\n\t\t\tthrow new Error('Invalid input data');\n\t\t}\n\t\tconst postData = {_id: room._id};\n\t\tconst postKeys = Object.keys(data);\n\t\tpostKeys.forEach(field => {\n\t\t\tif (field in room) {\n\t\t\t\tpostData[field] = data[field];\n\t\t\t\troom[field] = data[field]\n\t\t\t}\n\t\t});\n\t\tconst validationRes = validateInputFields(Object.keys(postData), postData);\n\t\tif (true !== validationRes) {\n\t\t\troom.errors = validationRes;\n\t\t\treturn room;\n\t\t}\n\t\tconst result = await saveRoomsApi(postData);\n\t\tif (result.error) {\n\t\t\tconst respErrorFields = result.response.data.data?.fields;\n\t\t\tif (respErrorFields && 'object' === typeof respErrorFields) {\n\t\t\t\tconst respErrorFieldNames = Object.keys(respErrorFields);\n\t\t\t\tif (!room.errors) room.errors = {};\n\t\t\t\trespErrorFieldNames.forEach(field => room.errors[field] = respErrorFields[field])\n\t\t\t}\n\t\t\t// ROOM_NOT_EXISTS\n\t\t\tif (1105 === result.response.data.code) {\n\t\t\t\tconsole.error('This room does not exists on database');\n\t\t\t\tthis.setErrorMessage('This room does not exists on database')\n\t\t\t\tthis.setState({isLoading: true});\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.loadRooms();\n\t\t\t\t}, 2000);\n\t\t\t}\n\t\t}\n\t\treturn room;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container maxWidth=\"md\">\n\n\t\t\t<div className=\"component rooms\">\n\t\t\t{true === this.state.isLoading && <div className=\"rooms__isLoading\"><CircularProgress className=\"\" color=\"secondary\" /></div> }\n\t\t\t<div className=\"rooms__header\">\n\t\t\t\t<h2>Rooms Settings</h2>\n\t\t\t\t<IconButton onClick={this.loadRooms} edge=\"end\" aria-label=\"unlock\">\n\t\t\t\t\t<RefreshIcon />\n\t\t\t\t</IconButton>\n\t\t\t</div>\n\t\t\t<div id=\"rooms__errorMessage\">\n\t\t\t\t{this.state.errorMessage && (\n\t\t\t\t\t<Alert className=\"rooms__alert\" severity=\"warning\">{this.state.errorMessage}</Alert>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<TableContainer component={Paper} className=\"rooms__listRoom\">\n\t\t\t<Table aria-label=\"rooms\">\n\t\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t<TableCell aria-label=\"Number\" className=\"rooms__cellNumber\">Number</TableCell>\n\t\t\t<TableCell aria-label=\"Title\">Title</TableCell>\n\t\t\t<TableCell aria-label=\"Status\">Status</TableCell>\n\t\t\t<TableCell aria-label=\"\" className=\"rooms__cellActions\"></TableCell>\n\t\t\t</TableRow>\n\t\t\t</TableHead>\n\t\t\t<TableBody>\n\t\t\t{this.state.roomList.rooms.map((room, index) => (\n\t\t\t\t<TableRow key={room._id}>\n\t\t\t\t<TableCell className=\"rooms__cellNumber\">\n\t\t\t\t<TextField\n\t\t\t\tdisabled={this.state.isLoading}\n\t\t\t\tname=\"number\"\n\t\t\t\ttype=\"text\"\n\t\t\t\terror={!!room?.errors?.number}\n\t\t\t\tfullwidth={true}\n\t\t\t\tlabel=\"Number:\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tonChange={(e) => this.updateRoomHandler(e, room._id)}\n\t\t\t\tdefaultValue={room.number}/>\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell>\n\t\t\t\t<TextField\n\t\t\t\tdisabled={this.state.isLoading}\n\t\t\t\tname=\"title\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tfullwidth={true}\n\t\t\t\terror={!!room?.errors?.title}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tlabel=\"Title:\"\n\t\t\t\tonChange={(e) => this.updateRoomHandler(e, room._id)}\n\t\t\t\tdefaultValue={room.title}/>\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell className=\"rooms__cellActions\">\n\t\t\t\t<div className=\"rooms__actionsContainer\">\n\t\t\t\t{'ACTIVE' === room.status && (\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={(e) => this.toggleStatusHandler(room._id)}\n\t\t\t\t\t\tdisabled={this.state.isLoading} edge=\"end\" aria-label=\"lock\">\n\t\t\t\t\t\t<LockOpenIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\t\t\t\t{'ACTIVE' !== room.status && (\n\t\t\t\t\t<IconButton disabled={this.state.isLoading}\n\t\t\t\t\t\tonClick={(e) => this.toggleStatusHandler(room._id)} edge=\"end\" aria-label=\"unlock\">\n\t\t\t\t\t\t<LockIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell align=\"right\">\n\t\t\t\t<IconButton disabled={this.state.isLoading}\n\t\t\t\t\tonClick={() => this.removeRoomHandler(room._id)} edge=\"end\" aria-label=\"delete\">\n\t\t\t\t\t<DeleteIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t</TableCell>\n\t\t\t\t</TableRow>\n\t\t\t\t))}\n\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t{this.state.isLoaded && (\n\t\t\t\t<FormControl>\n\t\t\t\t<Button onClick={this.addRoomHandler} variant=\"contained\" color=\"secondary\" fullwidth type=\"button\" disabled={this.state.isLoading}>New room</Button>\n\t\t\t\t</FormControl>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t</Container>\n\t\t\t);\n\t}\n}\n\nexport default adminRooms;\n","import { createMuiTheme, colors } from '@material-ui/core';\n\nconst textColor = '#fff';\nconst contrastText = '#fff';\nconst paletteType = 'dark';\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: paletteType,\n    background: {\n      default: paletteType === 'dark' ? '#191919' : '#fff'\n    },\n    primary: {\n      main: '#282828',\n      textColor: textColor,\n      contrastText: contrastText,\n    },\n    secondary: {\n      main: colors.green[700],\n      contrastText: contrastText,\n    },\n    error: {\n      main: colors.red[300],\n      contrastText: contrastText,\n    },\n  },\n  overrides: {\n    MuiTypography: {\n      colorPrimary: {\n        color: textColor\n      }\n    },\n    MuiCssBaseline: {\n      '@global': {\n        html: {\n          fontFamily: ['-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Oxygen',\n              'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue','sans-serif'].join(', '),\n          WebkitFontSmoothing: 'antialiased',\n          fontSize: 16,\n        }\n      }\n    }\n  }\n});\n\n\n// primary.main\n// secondary.main\n// error.main\n// warning.main\n// info.main\n// success.main\n// text.primary\n// text.secondary\n// text.disabled\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Switch, withRouter, Route } from \"react-router-dom\";\n\nimport authApi from './services/authApi';\nimport PrivateRoute from './routes/PrivateRoute'\nimport Bayan from './components/Bayan';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\nimport Events from './pages/Events';\nimport AddEvent from './pages/AddEvent';\nimport ChangeEvent from './pages/ChangeEvent';\nimport DeleteEvent from './pages/DeleteEvent';\nimport Page404 from './pages/Page404';\nimport ServerError from './pages/ServerError';\nimport AppError from './pages/AppError';\nimport Offline from './pages/Offline';\nimport { RENDER_STATES } from './stores/appStore';\n\nimport adminRooms from './pages/admin/Rooms';\n\nimport Container from '@material-ui/core/Container';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { theme } from './themes/';\n\nimport './App.scss'\n\n\n@inject('userStore', 'appStore')\n@withRouter\n@observer\nclass App extends React.Component {\n    async componentDidMount() {\n        const appStore = this.props.appStore;\n        const userStore = this.props.userStore;\n        if (!appStore.isOnline) {\n            appStore.setRenderState(RENDER_STATES.OFFLINE);\n            return;\n        }\n\n        authApi.verify()\n            .then(({ response }) => {\n                const apiData = response.getApiData();\n                if (!apiData.user) {\n                    appStore.setErrorMessage('Server error')\n                    appStore.setRenderState(RENDER_STATES.ERROR);\n                    console.log('invalid response', apiData);\n                }\n\n                userStore.setUser(apiData.user);\n                this.props.appStore.setRenderState(RENDER_STATES.COMMON);\n            })\n            .catch(({ error, response }) => {\n                if (error.response?.status !== 403) {\n                    appStore.setErrorMessage('Server error')\n                    appStore.setRenderState(RENDER_STATES.ERROR);\n                    console.log(response.message);\n                    return;\n                }\n\n                this.props.appStore.setRenderState(RENDER_STATES.COMMON);\n\n            });\n\n    }\n\n    render() {\n        console.info('App render', this.props.appStore.renderState);\n        const userStore = this.props.userStore;\n\n        const isLoggedIn = userStore.loggedIn;\n        const isAdmin = userStore.isAdmin;\n        let page = null;\n        switch(this.props.appStore.renderState) {\n            case RENDER_STATES.LOADER:\n                page = <Bayan/>;\n                break;\n            case RENDER_STATES.ERROR:\n                page = <ServerError/>;\n                break;\n            case RENDER_STATES.OFFLINE:\n                page = <Offline/>;\n                break;\n            case RENDER_STATES.COMMON:\n                page = (\n                    <Switch>\n                    <Route path=\"/login\" component={Login}/>\n                    <Route path=\"/register\" component={Register}/>\n\n                    <PrivateRoute path=\"/events\" exact component={Events} isLoggedIn={userStore.isLoggedIn}/>\n                    <PrivateRoute path=\"/events/add/:roomId?/:from?/:to?\" component={AddEvent} isLoggedIn={userStore.isLoggedIn}/>\n                    <PrivateRoute path=\"/events/change/:id\" exact component={ChangeEvent} isLoggedIn={userStore.isLoggedIn}/>\n                    <PrivateRoute path=\"/events/delete/:id\" exact component={DeleteEvent} isLoggedIn={userStore.isLoggedIn}/>\n                    <PrivateRoute path=\"/\" exact component={Events} isLoggedIn={userStore.isLoggedIn}/>\n                    <PrivateRoute path=\"/@:username\" component={Profile} isLoggedIn={userStore.isLoggedIn}/>\n\n                    <Route path=\"/rooms\" component={adminRooms} isAdmin={isAdmin} isLoggedIn={isLoggedIn}/>\n\n                    <Route component={Page404} />\n                    </Switch>\n                );\n                break;\n            default:\n                page = <AppError/>\n        }\n        return (\n            <ThemeProvider theme={theme}>\n                <CssBaseline/>\n                <div className=\"app\">\n                    <Header/>\n                    <main>\n                        <Container maxWidth=\"lg\">\n                            {page}\n                        </Container>\n                    </main>\n                    <Footer/>\n                </div>\n            </ThemeProvider>\n        );\n\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport userStore from './stores/userStore';\nimport appStore from './stores/appStore';\nimport profileStore from './stores/profileStore';\nimport authStore from './stores/authStore';\nimport App from './App';\nimport './index.scss';\n\n\nconst stores = { userStore, appStore, profileStore, authStore };\n\n// <React.StrictMode>\n//   <App />\n// </React.StrictMode>\nReactDOM.render(\n    <Provider {...stores}>\n        <HashRouter>\n            <React.StrictMode>\n                <App />\n            </React.StrictMode>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}