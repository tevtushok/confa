import React from 'react'
import { useTheme } from '@material-ui/core/styles';
import { makeStyles } from '@material-ui/core/styles';
import { inject } from 'mobx-react';

import {
    ArrowLeft as ArrowLeftIcon,
    ArrowRight as ArrowRightIcon,
} from "@material-ui/icons";

import {
    Container,
    Button,
    IconButton,
    ButtonGroup,
} from '@material-ui/core';

import './index.scss';

const STATUSES = {
    AVAILABLE: 'Available',
    RESERVED: 'Reserved',
    PENDING: 'Pending',
};

@inject('userStore')
class EventsRoom extends React.Component {
    constructor(props) {
        this.status = STATUSES.AVAILABLE;
    }
    isReservedByMe(event) {
        return !!Math.round(Math.random(0,1));
        // return event.user._id === this.props.userStore.user.id);
    }
    render() {
        // {/*<StatusBar status={this.status}/>*/}
        return (
            <div className={`eventsRoom mdc-theme--primary-bg ${this.status}`}>
                <div className="eventsRoom__wrapper">
                    <div className="eventsRoom__info-wrapper">
                        <div className="eventsRoom__info-details-wrapper">
                            <div className="eventsRoom__info-details">
                            <div className="eventsRoom__number">Number: <strong>{this.data.room.number}</strong></div>
                            <div className="eventsRoom__title">Title: <strong>{this.data.room.title}</strong></div>
                            <div className="eventsRoom__status-txt">Status: {this.statusText}</div>
                        </div>
                    <TimeLine {...this.props}/>
                </div>
            </div>
        );
    }
}
export default EventsRoom;

//function StatusBar(props) {
//    const theme = useTheme();

//    const statusPaletteMap = {
//        available: 'success',
//        pending: 'warning',
//        reserved: 'error'
//    }

//    const styleName = (props.status && props.status in statusPaletteMap) ? statusPaletteMap[props.status] : false;
//    const bgColor = styleName ? theme.palette[styleName].main : 'red';
//    const useStyles = makeStyles({
//        root: {
//            background: bgColor,
//        },
//    });
//    const classes = useStyles();
//    //console.log(theme)
//    return <div className={`eventsRoom__status-bar ${classes.root}`}></div>;

//}

//function TimeLine(props) {
//    return(
//        <ButtonGroup size="small" className="eventsRoom__timeblocks">
//            <Button>
//                <ArrowLeftIcon/>
//            </Button>
//            <TimeButton time="10:30" status="unavailable"/>
//            <Button className="eventsRoom__timebtn unavailable">11AM</Button>
//            <Button className="eventsRoom__timebtn available">11:30</Button>
//            <Button className="eventsRoom__timebtn available">12PM</Button>
//            <Button className="eventsRoom__timebtn available">12:30</Button>
//            <Button className="eventsRoom__timebtn available">13PM</Button>
//            <Button className="eventsRoom__timebtn available">13:30</Button>
//            <Button>
//                <ArrowRightIcon/>
//            </Button>
//        </ButtonGroup>
//    );
//}

//function TimeButton(props) {
//    const theme = useTheme();
//    const statusPaletteMap = {
//        available: 'success',
//        unavailable: 'error',
//    }

//    const styleName = (props.status && props.status in statusPaletteMap) ? statusPaletteMap[props.status] : false;
//    const borderColor = styleName ? theme.palette[styleName].main : 'red';
//    const useStyles = makeStyles({
//        root: {
//            'border-bottom-color': borderColor,
//        },
//    });
//    const classes = useStyles();
//    return (
//        <Button className={`eventsRoom__timebtn ${classes.root}`}>{props.time}</Button>
//    );


//}
